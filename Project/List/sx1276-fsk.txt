; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\sx1276-fsk.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\sx1276-fsk.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\J_LINK_RTT\RTT -I..\User -I..\BSP\BSP -I..\BSP\BSP_InPut -I..\BSP\BSP_OutPut -I..\BSP\BSP_FLASH -I..\BSP\BSP_USART -I..\Libraries\FreeRTOS -I..\Libraries\FreeRTOS\include -I..\Libraries\FreeRTOS\FreeRTOSConfig -I..\Libraries\FreeRTOS\portable\RVDS\ARM_CM3 -I..\BSP\OLED -I..\BSP -I..\BSP\OLED -I..\BSP\TIMER3 -I..\BSP\BSP_Switch -I..\BSP\BSP_USART1 -I..\BSP\BSP_Internet\W5500 -I..\BSP\SX1278\radio -I..\BSP\SX1278\platform\sx12xxEiger -I..\BSP\SX1278\platform -I..\BSP\apps -I..\BSP\BSP_FIFO -I..\BSP\crc -I..\BSP\ADC -I..\BSP\BSP_USART3 -I..\BSP\E31radio_driver -I..\BSP\TIMER2 -I..\BSP\BSP_USART2 -I.\RTE\_STM32F10x________2.0.0 -IE:\keil\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IE:\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\sx1276-fsk.crf ..\BSP\SX1278\radio\sx1276-Fsk.c]
                          THUMB

                          AREA ||i.SX1276FskGetOpMode||, CODE, READONLY, ALIGN=2

                  SX1276FskGetOpMode PROC
;;;249    
;;;250    uint8_t SX1276FskGetOpMode( void )
000000  b510              PUSH     {r4,lr}
;;;251    {
;;;252        SX1276Read( REG_OPMODE, &SX1276->RegOpMode );
000002  4806              LDR      r0,|L1.28|
000004  6801              LDR      r1,[r0,#0]  ; SX1276
000006  1c49              ADDS     r1,r1,#1
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       SX1276Read
;;;253        
;;;254        return SX1276->RegOpMode & ~RF_OPMODE_MASK;
00000e  4803              LDR      r0,|L1.28|
000010  6800              LDR      r0,[r0,#0]  ; SX1276
000012  7840              LDRB     r0,[r0,#1]
000014  f02000f8          BIC      r0,r0,#0xf8
;;;255    }
000018  bd10              POP      {r4,pc}
;;;256    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      SX1276

                          AREA ||i.SX1276FskGetPacketAfc||, CODE, READONLY, ALIGN=2

                  SX1276FskGetPacketAfc PROC
;;;292    
;;;293    uint32_t SX1276FskGetPacketAfc( void )
000000  4801              LDR      r0,|L2.8|
;;;294    {
;;;295        return RxPacketAfcValue;
000002  6800              LDR      r0,[r0,#0]  ; RxPacketAfcValue
;;;296    }
000004  4770              BX       lr
;;;297    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      RxPacketAfcValue

                          AREA ||i.SX1276FskGetPacketHeaderSize||, CODE, READONLY, ALIGN=2

                  SX1276FskGetPacketHeaderSize PROC
;;;336    // Remark: SX1276 must be fully initialized before calling this function
;;;337    uint16_t SX1276FskGetPacketHeaderSize( void )
000000  4809              LDR      r0,|L3.40|
;;;338    {
;;;339        uint16_t preambleSize;
;;;340        uint16_t syncSize;
;;;341    
;;;342        preambleSize = ( ( uint16_t )SX1276->RegPreambleMsb << 8 ) | ( uint16_t )SX1276->RegPreambleLsb;
000002  6800              LDR      r0,[r0,#0]  ; SX1276
000004  f8900026          LDRB     r0,[r0,#0x26]
000008  4b07              LDR      r3,|L3.40|
00000a  681b              LDR      r3,[r3,#0]  ; SX1276
00000c  f8933025          LDRB     r3,[r3,#0x25]
000010  ea402103          ORR      r1,r0,r3,LSL #8
;;;343        syncSize = ( SX1276->RegSyncConfig & 0x07 ) + 1;
000014  4804              LDR      r0,|L3.40|
000016  6800              LDR      r0,[r0,#0]  ; SX1276
000018  f8900027          LDRB     r0,[r0,#0x27]
00001c  f0000007          AND      r0,r0,#7
000020  1c42              ADDS     r2,r0,#1
;;;344        
;;;345        return preambleSize + syncSize;
000022  1888              ADDS     r0,r1,r2
000024  b280              UXTH     r0,r0
;;;346    }
000026  4770              BX       lr
;;;347    
                          ENDP

                  |L3.40|
                          DCD      SX1276

                          AREA ||i.SX1276FskGetPacketPayloadSize||, CODE, READONLY, ALIGN=2

                  SX1276FskGetPacketPayloadSize PROC
;;;318    // Remark: SX1276 must be fully initialized before calling this function
;;;319    uint16_t SX1276FskGetPacketPayloadSize( void )
000000  b530              PUSH     {r4,r5,lr}
;;;320    {
;;;321        uint16_t syncSize;
;;;322        uint16_t variableSize;
;;;323        uint16_t addressSize;
;;;324        uint16_t payloadSize;
;;;325        uint16_t crcSize;
;;;326    
;;;327        syncSize = ( SX1276->RegSyncConfig & 0x07 ) + 1;
000002  4816              LDR      r0,|L4.92|
000004  6800              LDR      r0,[r0,#0]  ; SX1276
000006  f8900027          LDRB     r0,[r0,#0x27]
00000a  f0000007          AND      r0,r0,#7
00000e  1c42              ADDS     r2,r0,#1
;;;328        variableSize = ( ( SX1276->RegPacketConfig1 & 0x80 ) == 0x80 ) ? 1 : 0;
000010  4812              LDR      r0,|L4.92|
000012  6800              LDR      r0,[r0,#0]  ; SX1276
000014  f8900030          LDRB     r0,[r0,#0x30]
000018  09c3              LSRS     r3,r0,#7
;;;329        addressSize = ( ( SX1276->RegPacketConfig1 & 0x06 ) != 0x00 ) ? 1 : 0;
00001a  4810              LDR      r0,|L4.92|
00001c  6800              LDR      r0,[r0,#0]  ; SX1276
00001e  f8900030          LDRB     r0,[r0,#0x30]
000022  f0000006          AND      r0,r0,#6
000026  b108              CBZ      r0,|L4.44|
000028  2001              MOVS     r0,#1
00002a  e000              B        |L4.46|
                  |L4.44|
00002c  2000              MOVS     r0,#0
                  |L4.46|
00002e  4604              MOV      r4,r0
;;;330        payloadSize = SX1276->RegPayloadLength;
000030  480a              LDR      r0,|L4.92|
000032  6800              LDR      r0,[r0,#0]  ; SX1276
000034  f8901032          LDRB     r1,[r0,#0x32]
;;;331        crcSize = ( ( SX1276->RegPacketConfig1 & 0x10 ) == 0x10 ) ? 2 : 0;
000038  4808              LDR      r0,|L4.92|
00003a  6800              LDR      r0,[r0,#0]  ; SX1276
00003c  f8900030          LDRB     r0,[r0,#0x30]
000040  f0000010          AND      r0,r0,#0x10
000044  2810              CMP      r0,#0x10
000046  d101              BNE      |L4.76|
000048  2002              MOVS     r0,#2
00004a  e000              B        |L4.78|
                  |L4.76|
00004c  2000              MOVS     r0,#0
                  |L4.78|
00004e  4605              MOV      r5,r0
;;;332        
;;;333        return syncSize + variableSize + addressSize + payloadSize + crcSize;
000050  18d0              ADDS     r0,r2,r3
000052  4420              ADD      r0,r0,r4
000054  4408              ADD      r0,r0,r1
000056  4428              ADD      r0,r0,r5
000058  b280              UXTH     r0,r0
;;;334    }
00005a  bd30              POP      {r4,r5,pc}
;;;335    
                          ENDP

                  |L4.92|
                          DCD      SX1276

                          AREA ||i.SX1276FskGetPacketRssi||, CODE, READONLY, ALIGN=2

                  SX1276FskGetPacketRssi PROC
;;;287    
;;;288    double SX1276FskGetPacketRssi( void )
000000  4901              LDR      r1,|L5.8|
;;;289    {
;;;290        return RxPacketRssiValue;
000002  c903              LDM      r1,{r0,r1}
;;;291    }
000004  4770              BX       lr
;;;292    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      RxPacketRssiValue

                          AREA ||i.SX1276FskGetPacketRxGain||, CODE, READONLY, ALIGN=2

                  SX1276FskGetPacketRxGain PROC
;;;282    
;;;283    uint8_t SX1276FskGetPacketRxGain( void )
000000  4801              LDR      r0,|L6.8|
;;;284    {
;;;285        return RxGain;
000002  7800              LDRB     r0,[r0,#0]  ; RxGain
;;;286    }
000004  4770              BX       lr
;;;287    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      RxGain

                          AREA ||i.SX1276FskGetRFState||, CODE, READONLY, ALIGN=2

                  SX1276FskGetRFState PROC
;;;347    
;;;348    uint8_t SX1276FskGetRFState( void )
000000  4801              LDR      r0,|L7.8|
;;;349    {
;;;350        return RFState;
000002  7800              LDRB     r0,[r0,#0]  ; RFState
;;;351    }
000004  4770              BX       lr
;;;352    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      RFState

                          AREA ||i.SX1276FskGetRxPacket||, CODE, READONLY, ALIGN=2

                  SX1276FskGetRxPacket PROC
;;;302    
;;;303    void SX1276FskGetRxPacket( void *buffer, uint16_t *size )
000000  b570              PUSH     {r4-r6,lr}
;;;304    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;305        *size = RxPacketSize;
000006  4806              LDR      r0,|L8.32|
000008  8800              LDRH     r0,[r0,#0]  ; RxPacketSize
00000a  8020              STRH     r0,[r4,#0]
;;;306        RxPacketSize = 0;
00000c  2000              MOVS     r0,#0
00000e  4904              LDR      r1,|L8.32|
000010  8008              STRH     r0,[r1,#0]
;;;307        memcpy( ( void * )buffer, ( void * )RFBuffer, ( size_t )*size );
000012  8822              LDRH     r2,[r4,#0]
000014  4903              LDR      r1,|L8.36|
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       __aeabi_memcpy
;;;308    }
00001c  bd70              POP      {r4-r6,pc}
;;;309    
                          ENDP

00001e  0000              DCW      0x0000
                  |L8.32|
                          DCD      RxPacketSize
                  |L8.36|
                          DCD      RFBuffer

                          AREA ||i.SX1276FskInit||, CODE, READONLY, ALIGN=2

                  SX1276FskInit PROC
;;;111    
;;;112    void SX1276FskInit( void )
000000  b510              PUSH     {r4,lr}
;;;113    {
;;;114        RFState = RF_STATE_IDLE;
000002  2000              MOVS     r0,#0
000004  495a              LDR      r1,|L9.368|
000006  7008              STRB     r0,[r1,#0]
;;;115    
;;;116        SX1276FskSetDefaults( );
000008  f7fffffe          BL       SX1276FskSetDefaults
;;;117        
;;;118        SX1276ReadBuffer( REG_OPMODE, SX1276Regs + 1, 0x70 - 1 );
00000c  226f              MOVS     r2,#0x6f
00000e  4959              LDR      r1,|L9.372|
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       SX1276ReadBuffer
;;;119    
;;;120        // Set the device in FSK mode and Sleep Mode
;;;121        SX1276->RegOpMode = RF_OPMODE_MODULATIONTYPE_FSK | RF_OPMODE_SLEEP;
000016  2000              MOVS     r0,#0
000018  4957              LDR      r1,|L9.376|
00001a  6809              LDR      r1,[r1,#0]  ; SX1276
00001c  7048              STRB     r0,[r1,#1]
;;;122        SX1276Write( REG_OPMODE, SX1276->RegOpMode );
00001e  4856              LDR      r0,|L9.376|
000020  6800              LDR      r0,[r0,#0]  ; SX1276
000022  7841              LDRB     r1,[r0,#1]
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       SX1276Write
;;;123    
;;;124        SX1276->RegPaRamp = RF_PARAMP_MODULATIONSHAPING_01;
00002a  2020              MOVS     r0,#0x20
00002c  4952              LDR      r1,|L9.376|
00002e  6809              LDR      r1,[r1,#0]  ; SX1276
000030  7288              STRB     r0,[r1,#0xa]
;;;125        SX1276Write( REG_PARAMP, SX1276->RegPaRamp );
000032  4851              LDR      r0,|L9.376|
000034  6800              LDR      r0,[r0,#0]  ; SX1276
000036  7a81              LDRB     r1,[r0,#0xa]
000038  200a              MOVS     r0,#0xa
00003a  f7fffffe          BL       SX1276Write
;;;126    
;;;127        SX1276->RegLna = RF_LNA_GAIN_G1;
00003e  2020              MOVS     r0,#0x20
000040  494d              LDR      r1,|L9.376|
000042  6809              LDR      r1,[r1,#0]  ; SX1276
000044  7308              STRB     r0,[r1,#0xc]
;;;128        SX1276Write( REG_LNA, SX1276->RegLna );
000046  484c              LDR      r0,|L9.376|
000048  6800              LDR      r0,[r0,#0]  ; SX1276
00004a  7b01              LDRB     r1,[r0,#0xc]
00004c  200c              MOVS     r0,#0xc
00004e  f7fffffe          BL       SX1276Write
;;;129    
;;;130        if( FskSettings.AfcOn == true )
000052  484a              LDR      r0,|L9.380|
000054  7e40              LDRB     r0,[r0,#0x19]  ; FskSettings
000056  2801              CMP      r0,#1
000058  d104              BNE      |L9.100|
;;;131        {
;;;132            SX1276->RegRxConfig = RF_RXCONFIG_RESTARTRXONCOLLISION_OFF | RF_RXCONFIG_AFCAUTO_ON |
00005a  201e              MOVS     r0,#0x1e
00005c  4946              LDR      r1,|L9.376|
00005e  6809              LDR      r1,[r1,#0]  ; SX1276
000060  7348              STRB     r0,[r1,#0xd]
000062  e003              B        |L9.108|
                  |L9.100|
;;;133                                  RF_RXCONFIG_AGCAUTO_ON | RF_RXCONFIG_RXTRIGER_PREAMBLEDETECT;
;;;134        }
;;;135        else
;;;136        {
;;;137            SX1276->RegRxConfig = RF_RXCONFIG_RESTARTRXONCOLLISION_OFF | RF_RXCONFIG_AFCAUTO_OFF |
000064  200e              MOVS     r0,#0xe
000066  4944              LDR      r1,|L9.376|
000068  6809              LDR      r1,[r1,#0]  ; SX1276
00006a  7348              STRB     r0,[r1,#0xd]
                  |L9.108|
;;;138                                  RF_RXCONFIG_AGCAUTO_ON | RF_RXCONFIG_RXTRIGER_PREAMBLEDETECT;
;;;139        }
;;;140    
;;;141        SX1276->RegPreambleLsb = 8;
00006c  2008              MOVS     r0,#8
00006e  4942              LDR      r1,|L9.376|
000070  6809              LDR      r1,[r1,#0]  ; SX1276
000072  f8810026          STRB     r0,[r1,#0x26]
;;;142        
;;;143        SX1276->RegPreambleDetect = RF_PREAMBLEDETECT_DETECTOR_ON | RF_PREAMBLEDETECT_DETECTORSIZE_2 |
000076  20aa              MOVS     r0,#0xaa
000078  493f              LDR      r1,|L9.376|
00007a  6809              LDR      r1,[r1,#0]  ; SX1276
00007c  77c8              STRB     r0,[r1,#0x1f]
;;;144                                    RF_PREAMBLEDETECT_DETECTORTOL_10;
;;;145    
;;;146        SX1276->RegRssiThresh = 0xFF;
00007e  20ff              MOVS     r0,#0xff
000080  493d              LDR      r1,|L9.376|
000082  6809              LDR      r1,[r1,#0]  ; SX1276
000084  7408              STRB     r0,[r1,#0x10]
;;;147    
;;;148        SX1276->RegSyncConfig = RF_SYNCCONFIG_AUTORESTARTRXMODE_WAITPLL_ON | RF_SYNCCONFIG_PREAMBLEPOLARITY_AA |
000086  2093              MOVS     r0,#0x93
000088  493b              LDR      r1,|L9.376|
00008a  6809              LDR      r1,[r1,#0]  ; SX1276
00008c  f8810027          STRB     r0,[r1,#0x27]
;;;149                                RF_SYNCCONFIG_SYNC_ON |
;;;150                                RF_SYNCCONFIG_SYNCSIZE_4;
;;;151    
;;;152        SX1276->RegSyncValue1 = 0x69;
000090  2069              MOVS     r0,#0x69
000092  4939              LDR      r1,|L9.376|
000094  6809              LDR      r1,[r1,#0]  ; SX1276
000096  f8810028          STRB     r0,[r1,#0x28]
;;;153        SX1276->RegSyncValue2 = 0x81;
00009a  2081              MOVS     r0,#0x81
00009c  4936              LDR      r1,|L9.376|
00009e  6809              LDR      r1,[r1,#0]  ; SX1276
0000a0  f8810029          STRB     r0,[r1,#0x29]
;;;154        SX1276->RegSyncValue3 = 0x7E;
0000a4  207e              MOVS     r0,#0x7e
0000a6  4934              LDR      r1,|L9.376|
0000a8  6809              LDR      r1,[r1,#0]  ; SX1276
0000aa  f881002a          STRB     r0,[r1,#0x2a]
;;;155        SX1276->RegSyncValue4 = 0x96;
0000ae  2096              MOVS     r0,#0x96
0000b0  4931              LDR      r1,|L9.376|
0000b2  6809              LDR      r1,[r1,#0]  ; SX1276
0000b4  f881002b          STRB     r0,[r1,#0x2b]
;;;156    
;;;157        SX1276->RegPacketConfig1 = RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE | RF_PACKETCONFIG1_DCFREE_OFF |
0000b8  4830              LDR      r0,|L9.380|
0000ba  7e00              LDRB     r0,[r0,#0x18]  ; FskSettings
0000bc  2180              MOVS     r1,#0x80
0000be  ea411000          ORR      r0,r1,r0,LSL #4
0000c2  492d              LDR      r1,|L9.376|
0000c4  6809              LDR      r1,[r1,#0]  ; SX1276
0000c6  f8810030          STRB     r0,[r1,#0x30]
;;;158                                   ( FskSettings.CrcOn << 4 ) | RF_PACKETCONFIG1_CRCAUTOCLEAR_ON |
;;;159                                   RF_PACKETCONFIG1_ADDRSFILTERING_OFF | RF_PACKETCONFIG1_CRCWHITENINGTYPE_CCITT;
;;;160        SX1276FskGetPacketCrcOn( ); // Update CrcOn on FskSettings
0000ca  f7fffffe          BL       SX1276FskGetPacketCrcOn
;;;161    
;;;162        SX1276->RegPayloadLength = FskSettings.PayloadLength;
0000ce  482b              LDR      r0,|L9.380|
0000d0  7e80              LDRB     r0,[r0,#0x1a]  ; FskSettings
0000d2  4929              LDR      r1,|L9.376|
0000d4  6809              LDR      r1,[r1,#0]  ; SX1276
0000d6  f8810032          STRB     r0,[r1,#0x32]
;;;163    
;;;164        // we can now update the registers with our configuration
;;;165        SX1276WriteBuffer( REG_OPMODE, SX1276Regs + 1, 0x70 - 1 );
0000da  226f              MOVS     r2,#0x6f
0000dc  4925              LDR      r1,|L9.372|
0000de  2001              MOVS     r0,#1
0000e0  f7fffffe          BL       SX1276WriteBuffer
;;;166    
;;;167        // then we need to set the RF settings 
;;;168        SX1276FskSetRFFrequency( FskSettings.RFFrequency );
0000e4  4925              LDR      r1,|L9.380|
0000e6  6808              LDR      r0,[r1,#0]  ; FskSettings
0000e8  f7fffffe          BL       SX1276FskSetRFFrequency
;;;169        SX1276FskSetBitrate( FskSettings.Bitrate );
0000ec  4923              LDR      r1,|L9.380|
0000ee  6848              LDR      r0,[r1,#4]  ; FskSettings
0000f0  f7fffffe          BL       SX1276FskSetBitrate
;;;170        SX1276FskSetFdev( FskSettings.Fdev );
0000f4  4921              LDR      r1,|L9.380|
0000f6  6888              LDR      r0,[r1,#8]  ; FskSettings
0000f8  f7fffffe          BL       SX1276FskSetFdev
;;;171    
;;;172        SX1276FskSetDccBw( &SX1276->RegRxBw, 0, FskSettings.RxBw );
0000fc  481f              LDR      r0,|L9.380|
0000fe  2100              MOVS     r1,#0
000100  6902              LDR      r2,[r0,#0x10]  ; FskSettings
000102  481d              LDR      r0,|L9.376|
000104  6800              LDR      r0,[r0,#0]  ; SX1276
000106  3012              ADDS     r0,r0,#0x12
000108  f7fffffe          BL       SX1276FskSetDccBw
;;;173        SX1276FskSetDccBw( &SX1276->RegAfcBw, 0, FskSettings.RxBwAfc );
00010c  481b              LDR      r0,|L9.380|
00010e  2100              MOVS     r1,#0
000110  6942              LDR      r2,[r0,#0x14]  ; FskSettings
000112  4819              LDR      r0,|L9.376|
000114  6800              LDR      r0,[r0,#0]  ; SX1276
000116  3013              ADDS     r0,r0,#0x13
000118  f7fffffe          BL       SX1276FskSetDccBw
;;;174        SX1276FskSetRssiOffset( 0 );
00011c  2000              MOVS     r0,#0
00011e  f7fffffe          BL       SX1276FskSetRssiOffset
;;;175    
;;;176    #if( ( MODULE_SX1276RF1IAS == 1 ) || ( MODULE_SX1276RF1KAS == 1 ) )
;;;177        if( FskSettings.RFFrequency > 860000000 )
;;;178        {
;;;179            SX1276FskSetPAOutput( RF_PACONFIG_PASELECT_RFO );
;;;180            SX1276FskSetPa20dBm( false );
;;;181            FskSettings.Power = 14;
;;;182            SX1276FskSetRFPower( FskSettings.Power );
;;;183        }
;;;184        else
;;;185        {
;;;186            SX1276FskSetPAOutput( RF_PACONFIG_PASELECT_PABOOST );
;;;187            SX1276FskSetPa20dBm( true );
;;;188            FskSettings.Power = 20;
;;;189            SX1276FskSetRFPower( FskSettings.Power );
;;;190        } 
;;;191    #elif( MODULE_SX1276RF1JAS == 1 )
;;;192        if( FskSettings.RFFrequency > 860000000 )
000122  4816              LDR      r0,|L9.380|
000124  6800              LDR      r0,[r0,#0]  ; FskSettings
000126  4916              LDR      r1,|L9.384|
000128  4288              CMP      r0,r1
00012a  d90d              BLS      |L9.328|
;;;193        {
;;;194            SX1276FskSetPAOutput( RF_PACONFIG_PASELECT_PABOOST );
00012c  2080              MOVS     r0,#0x80
00012e  f7fffffe          BL       SX1276FskSetPAOutput
;;;195            SX1276FskSetPa20dBm( true );
000132  2001              MOVS     r0,#1
000134  f7fffffe          BL       SX1276FskSetPa20dBm
;;;196            FskSettings.Power = 20;
000138  2014              MOVS     r0,#0x14
00013a  4910              LDR      r1,|L9.380|
00013c  7308              STRB     r0,[r1,#0xc]
;;;197            SX1276FskSetRFPower( FskSettings.Power );
00013e  f991000c          LDRSB    r0,[r1,#0xc]  ; FskSettings
000142  f7fffffe          BL       SX1276FskSetRFPower
000146  e00c              B        |L9.354|
                  |L9.328|
;;;198        }
;;;199        else
;;;200        {
;;;201            SX1276FskSetPAOutput( RF_PACONFIG_PASELECT_RFO );
000148  2000              MOVS     r0,#0
00014a  f7fffffe          BL       SX1276FskSetPAOutput
;;;202            SX1276FskSetPa20dBm( false );
00014e  2000              MOVS     r0,#0
000150  f7fffffe          BL       SX1276FskSetPa20dBm
;;;203            FskSettings.Power = 14;
000154  200e              MOVS     r0,#0xe
000156  4909              LDR      r1,|L9.380|
000158  7308              STRB     r0,[r1,#0xc]
;;;204            SX1276FskSetRFPower( FskSettings.Power );
00015a  f991000c          LDRSB    r0,[r1,#0xc]  ; FskSettings
00015e  f7fffffe          BL       SX1276FskSetRFPower
                  |L9.354|
;;;205        } 
;;;206    #endif
;;;207    
;;;208        SX1276FskSetOpMode( RF_OPMODE_STANDBY );
000162  2001              MOVS     r0,#1
000164  f7fffffe          BL       SX1276FskSetOpMode
;;;209    
;;;210        // Calibrate the HF
;;;211        SX1276FskRxCalibrate( );
000168  f7fffffe          BL       SX1276FskRxCalibrate
;;;212    }
00016c  bd10              POP      {r4,pc}
;;;213    
                          ENDP

00016e  0000              DCW      0x0000
                  |L9.368|
                          DCD      RFState
                  |L9.372|
                          DCD      SX1276Regs+0x1
                  |L9.376|
                          DCD      SX1276
                  |L9.380|
                          DCD      FskSettings
                  |L9.384|
                          DCD      0x33428f00

                          AREA ||i.SX1276FskProcess||, CODE, READONLY, ALIGN=2

                  SX1276FskProcess PROC
;;;357    
;;;358    uint32_t SX1276FskProcess( void )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;359    {
000004  b089              SUB      sp,sp,#0x24
;;;360        uint32_t result = RF_BUSY;
000006  2001              MOVS     r0,#1
000008  9008              STR      r0,[sp,#0x20]
;;;361    
;;;362        switch( RFState )
00000a  48f8              LDR      r0,|L10.1004|
00000c  7800              LDRB     r0,[r0,#0]  ; RFState
00000e  280c              CMP      r0,#0xc
000010  d27e              BCS      |L10.272|
000012  e8dff000          TBB      [pc,r0]
000016  0607              DCB      0x06,0x07
000018  84efedec          DCB      0x84,0xef,0xed,0xec
00001c  ebeae9e8          DCB      0xeb,0xea,0xe9,0xe8
000020  e7e6              DCB      0xe7,0xe6
;;;363        {
;;;364        case RF_STATE_IDLE:
;;;365            break;
000022  e2bf              B        |L10.1444|
;;;366        // Rx management
;;;367        case RF_STATE_RX_INIT:
;;;368            // DIO mapping setup
;;;369            if( ( SX1276->RegPacketConfig1 & RF_PACKETCONFIG1_CRC_ON ) == RF_PACKETCONFIG1_CRC_ON )
000024  48f2              LDR      r0,|L10.1008|
000026  6800              LDR      r0,[r0,#0]  ; SX1276
000028  f8900030          LDRB     r0,[r0,#0x30]
00002c  f0000010          AND      r0,r0,#0x10
000030  2810              CMP      r0,#0x10
000032  d105              BNE      |L10.64|
;;;370            {
;;;371                //                           CrcOk,                   FifoLevel,               SyncAddr,               FifoEmpty
;;;372                SX1276->RegDioMapping1 = RF_DIOMAPPING1_DIO0_01 | RF_DIOMAPPING1_DIO1_00 | RF_DIOMAPPING1_DIO2_11 | RF_DIOMAPPING1_DIO3_00;
000034  204c              MOVS     r0,#0x4c
000036  49ee              LDR      r1,|L10.1008|
000038  6809              LDR      r1,[r1,#0]  ; SX1276
00003a  f8810040          STRB     r0,[r1,#0x40]
00003e  e004              B        |L10.74|
                  |L10.64|
;;;373            }
;;;374            else
;;;375            {
;;;376                //                           PayloadReady,            FifoLevel,               SyncAddr,               FifoEmpty
;;;377                SX1276->RegDioMapping1 = RF_DIOMAPPING1_DIO0_00 | RF_DIOMAPPING1_DIO1_00 | RF_DIOMAPPING1_DIO2_11 | RF_DIOMAPPING1_DIO3_00;
000040  200c              MOVS     r0,#0xc
000042  49eb              LDR      r1,|L10.1008|
000044  6809              LDR      r1,[r1,#0]  ; SX1276
000046  f8810040          STRB     r0,[r1,#0x40]
                  |L10.74|
;;;378            }
;;;379            //                          Preamble,                   Data
;;;380            SX1276->RegDioMapping2 = RF_DIOMAPPING2_DIO4_11 | RF_DIOMAPPING2_DIO5_10 | RF_DIOMAPPING2_MAP_PREAMBLEDETECT;
00004a  20e1              MOVS     r0,#0xe1
00004c  49e8              LDR      r1,|L10.1008|
00004e  6809              LDR      r1,[r1,#0]  ; SX1276
000050  f8810041          STRB     r0,[r1,#0x41]
;;;381            SX1276WriteBuffer( REG_DIOMAPPING1, &SX1276->RegDioMapping1, 2 );
000054  2202              MOVS     r2,#2
000056  48e6              LDR      r0,|L10.1008|
000058  6801              LDR      r1,[r0,#0]  ; SX1276
00005a  3140              ADDS     r1,r1,#0x40
00005c  2040              MOVS     r0,#0x40
00005e  f7fffffe          BL       SX1276WriteBuffer
;;;382    
;;;383            SX1276FskSetOpMode( RF_OPMODE_RECEIVER );
000062  2005              MOVS     r0,#5
000064  f7fffffe          BL       SX1276FskSetOpMode
;;;384        
;;;385            memset( RFBuffer, 0, ( size_t )RF_BUFFER_SIZE );
000068  f44f7180          MOV      r1,#0x100
00006c  48e1              LDR      r0,|L10.1012|
00006e  f7fffffe          BL       __aeabi_memclr
;;;386    
;;;387            PacketTimeout = ( uint16_t )( round( ( 8.0 * ( ( double )SX1276FskGetPacketPayloadSize( ) ) / ( double )FskSettings.Bitrate ) * 1000.0 ) + 1.0 );
000072  49e1              LDR      r1,|L10.1016|
000074  6848              LDR      r0,[r1,#4]  ; FskSettings
000076  f7fffffe          BL       __aeabi_ui2d
00007a  e9cd0102          STRD     r0,r1,[sp,#8]
00007e  f7fffffe          BL       SX1276FskGetPacketPayloadSize
000082  9001              STR      r0,[sp,#4]
000084  f7fffffe          BL       __aeabi_ui2d
000088  4680              MOV      r8,r0
00008a  2200              MOVS     r2,#0
00008c  4bdb              LDR      r3,|L10.1020|
00008e  f7fffffe          BL       __aeabi_dmul
000092  4606              MOV      r6,r0
000094  e9dd2302          LDRD     r2,r3,[sp,#8]
000098  f7fffffe          BL       __aeabi_ddiv
00009c  2200              MOVS     r2,#0
00009e  4bd8              LDR      r3,|L10.1024|
0000a0  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000a4  f7fffffe          BL       __aeabi_dmul
0000a8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000ac  f7fffffe          BL       round
0000b0  4604              MOV      r4,r0
0000b2  2200              MOVS     r2,#0
0000b4  4bd3              LDR      r3,|L10.1028|
0000b6  f7fffffe          BL       __aeabi_dadd
0000ba  4682              MOV      r10,r0
0000bc  f7fffffe          BL       __aeabi_d2uiz
0000c0  b280              UXTH     r0,r0
0000c2  49d1              LDR      r1,|L10.1032|
0000c4  6008              STR      r0,[r1,#0]  ; PacketTimeout
;;;388            PacketTimeout = PacketTimeout + ( PacketTimeout >> 1 ); // Set the Packet timeout as 1.5 times the full payload transmission time
0000c6  4608              MOV      r0,r1
0000c8  6800              LDR      r0,[r0,#0]  ; PacketTimeout
0000ca  eb000050          ADD      r0,r0,r0,LSR #1
0000ce  6008              STR      r0,[r1,#0]  ; PacketTimeout
;;;389    
;;;390            Preamble2SyncTimeout = PacketTimeout;
0000d0  4608              MOV      r0,r1
0000d2  6800              LDR      r0,[r0,#0]  ; PacketTimeout
0000d4  49cd              LDR      r1,|L10.1036|
0000d6  6008              STR      r0,[r1,#0]  ; Preamble2SyncTimeout
;;;391    
;;;392            Preamble2SyncTimer = RxTimeoutTimer = GET_TICK_COUNT( );
0000d8  48cd              LDR      r0,|L10.1040|
0000da  6800              LDR      r0,[r0,#0]  ; TickCounter
0000dc  49cd              LDR      r1,|L10.1044|
0000de  6008              STR      r0,[r1,#0]  ; RxTimeoutTimer
0000e0  49cd              LDR      r1,|L10.1048|
0000e2  6008              STR      r0,[r1,#0]  ; Preamble2SyncTimer
;;;393    
;;;394            SX1276->RegFifoThresh = RF_FIFOTHRESH_TXSTARTCONDITION_FIFONOTEMPTY | 0x20; // 32 bytes of data
0000e4  20a0              MOVS     r0,#0xa0
0000e6  49c2              LDR      r1,|L10.1008|
0000e8  6809              LDR      r1,[r1,#0]  ; SX1276
0000ea  f8810035          STRB     r0,[r1,#0x35]
;;;395            SX1276Write( REG_FIFOTHRESH, SX1276->RegFifoThresh );
0000ee  48c0              LDR      r0,|L10.1008|
0000f0  6800              LDR      r0,[r0,#0]  ; SX1276
0000f2  f8901035          LDRB     r1,[r0,#0x35]
0000f6  2035              MOVS     r0,#0x35
0000f8  f7fffffe          BL       SX1276Write
;;;396    
;;;397            PreambleDetected = false;
0000fc  2000              MOVS     r0,#0
0000fe  49c7              LDR      r1,|L10.1052|
000100  7008              STRB     r0,[r1,#0]
;;;398            SyncWordDetected = false;
000102  49c7              LDR      r1,|L10.1056|
000104  7008              STRB     r0,[r1,#0]
;;;399            PacketDetected = false;
000106  49c7              LDR      r1,|L10.1060|
000108  7008              STRB     r0,[r1,#0]
;;;400            RxBytesRead = 0;
00010a  49c7              LDR      r1,|L10.1064|
00010c  7008              STRB     r0,[r1,#0]
;;;401            RxPacketSize = 0;
00010e  e000              B        |L10.274|
                  |L10.272|
000110  e247              B        |L10.1442|
                  |L10.274|
000112  49c6              LDR      r1,|L10.1068|
000114  8008              STRH     r0,[r1,#0]
;;;402            RFState = RF_STATE_RX_SYNC;
000116  2002              MOVS     r0,#2
000118  49b4              LDR      r1,|L10.1004|
00011a  7008              STRB     r0,[r1,#0]
;;;403            break;
00011c  e242              B        |L10.1444|
;;;404        case RF_STATE_RX_SYNC:
;;;405            if( ( DIO4 == 1 ) && ( PreambleDetected == false ) )// Preamble
00011e  f7fffffe          BL       SX1276ReadDio4
000122  2801              CMP      r0,#1
000124  d109              BNE      |L10.314|
000126  48bd              LDR      r0,|L10.1052|
000128  7800              LDRB     r0,[r0,#0]  ; PreambleDetected
00012a  b930              CBNZ     r0,|L10.314|
;;;406            {
;;;407                PreambleDetected = true;
00012c  2001              MOVS     r0,#1
00012e  49bb              LDR      r1,|L10.1052|
000130  7008              STRB     r0,[r1,#0]
;;;408                Preamble2SyncTimer = GET_TICK_COUNT( );
000132  48b7              LDR      r0,|L10.1040|
000134  6800              LDR      r0,[r0,#0]  ; TickCounter
000136  49b8              LDR      r1,|L10.1048|
000138  6008              STR      r0,[r1,#0]  ; Preamble2SyncTimer
                  |L10.314|
;;;409            }
;;;410            if( ( DIO2 == 1 ) && ( PreambleDetected == true ) && ( SyncWordDetected == false ) ) // SyncAddr
00013a  f7fffffe          BL       SX1276ReadDio2
00013e  2801              CMP      r0,#1
000140  d11e              BNE      |L10.384|
000142  48b6              LDR      r0,|L10.1052|
000144  7800              LDRB     r0,[r0,#0]  ; PreambleDetected
000146  2801              CMP      r0,#1
000148  d11a              BNE      |L10.384|
00014a  48b5              LDR      r0,|L10.1056|
00014c  7800              LDRB     r0,[r0,#0]  ; SyncWordDetected
00014e  b9b8              CBNZ     r0,|L10.384|
;;;411            {
;;;412                SyncWordDetected = true;
000150  2001              MOVS     r0,#1
000152  49b3              LDR      r1,|L10.1056|
000154  7008              STRB     r0,[r1,#0]
;;;413            
;;;414                RxPacketRssiValue = SX1276FskReadRssi( );
000156  f7fffffe          BL       SX1276FskReadRssi
00015a  4ab5              LDR      r2,|L10.1072|
00015c  c203              STM      r2!,{r0,r1}
;;;415    
;;;416                RxPacketAfcValue = SX1276FskReadAfc( );
00015e  f7fffffe          BL       SX1276FskReadAfc
000162  49b4              LDR      r1,|L10.1076|
000164  6008              STR      r0,[r1,#0]  ; RxPacketAfcValue
;;;417                RxGain = SX1276FskReadRxGain( );
000166  f7fffffe          BL       SX1276FskReadRxGain
00016a  49b3              LDR      r1,|L10.1080|
00016c  7008              STRB     r0,[r1,#0]
;;;418            
;;;419                Preamble2SyncTimer = RxTimeoutTimer = GET_TICK_COUNT( );
00016e  48a8              LDR      r0,|L10.1040|
000170  6800              LDR      r0,[r0,#0]  ; TickCounter
000172  49a8              LDR      r1,|L10.1044|
000174  6008              STR      r0,[r1,#0]  ; RxTimeoutTimer
000176  49a8              LDR      r1,|L10.1048|
000178  6008              STR      r0,[r1,#0]  ; Preamble2SyncTimer
;;;420    
;;;421                RFState = RF_STATE_RX_RUNNING;
00017a  2003              MOVS     r0,#3
00017c  499b              LDR      r1,|L10.1004|
00017e  7008              STRB     r0,[r1,#0]
                  |L10.384|
;;;422            }
;;;423    
;;;424            // Preamble 2 SyncAddr timeout
;;;425            if( ( SyncWordDetected == false ) && ( PreambleDetected == true ) && ( ( GET_TICK_COUNT( ) - Preamble2SyncTimer ) > Preamble2SyncTimeout ) )
000180  48a7              LDR      r0,|L10.1056|
000182  7800              LDRB     r0,[r0,#0]  ; SyncWordDetected
000184  b9b8              CBNZ     r0,|L10.438|
000186  48a5              LDR      r0,|L10.1052|
000188  7800              LDRB     r0,[r0,#0]  ; PreambleDetected
00018a  2801              CMP      r0,#1
00018c  d113              BNE      |L10.438|
00018e  48a0              LDR      r0,|L10.1040|
000190  6800              LDR      r0,[r0,#0]  ; TickCounter
000192  49a1              LDR      r1,|L10.1048|
000194  6809              LDR      r1,[r1,#0]  ; Preamble2SyncTimer
000196  1a40              SUBS     r0,r0,r1
000198  499c              LDR      r1,|L10.1036|
00019a  6809              LDR      r1,[r1,#0]  ; Preamble2SyncTimeout
00019c  4288              CMP      r0,r1
00019e  d90a              BLS      |L10.438|
;;;426            {
;;;427                RFState = RF_STATE_RX_INIT;
0001a0  2001              MOVS     r0,#1
0001a2  4992              LDR      r1,|L10.1004|
0001a4  7008              STRB     r0,[r1,#0]
;;;428                SX1276Write( REG_RXCONFIG, SX1276->RegRxConfig | RF_RXCONFIG_RESTARTRXWITHPLLLOCK );
0001a6  4892              LDR      r0,|L10.1008|
0001a8  6800              LDR      r0,[r0,#0]  ; SX1276
0001aa  7b40              LDRB     r0,[r0,#0xd]
0001ac  f0400120          ORR      r1,r0,#0x20
0001b0  200d              MOVS     r0,#0xd
0001b2  f7fffffe          BL       SX1276Write
                  |L10.438|
;;;429            }
;;;430            if( ( SyncWordDetected == false ) &&
0001b6  489a              LDR      r0,|L10.1056|
0001b8  7800              LDRB     r0,[r0,#0]  ; SyncWordDetected
0001ba  b988              CBNZ     r0,|L10.480|
;;;431                ( PreambleDetected == false ) &&
0001bc  4897              LDR      r0,|L10.1052|
0001be  7800              LDRB     r0,[r0,#0]  ; PreambleDetected
0001c0  b970              CBNZ     r0,|L10.480|
;;;432                ( PacketDetected == false ) &&
0001c2  4898              LDR      r0,|L10.1060|
0001c4  7800              LDRB     r0,[r0,#0]  ; PacketDetected
0001c6  b958              CBNZ     r0,|L10.480|
;;;433                ( ( GET_TICK_COUNT( ) - RxTimeoutTimer ) > PacketTimeout ) )
0001c8  4891              LDR      r0,|L10.1040|
0001ca  6800              LDR      r0,[r0,#0]  ; TickCounter
0001cc  4991              LDR      r1,|L10.1044|
0001ce  6809              LDR      r1,[r1,#0]  ; RxTimeoutTimer
0001d0  1a40              SUBS     r0,r0,r1
0001d2  498d              LDR      r1,|L10.1032|
0001d4  6809              LDR      r1,[r1,#0]  ; PacketTimeout
0001d6  4288              CMP      r0,r1
0001d8  d902              BLS      |L10.480|
;;;434            {
;;;435                RFState = RF_STATE_RX_TIMEOUT;
0001da  2005              MOVS     r0,#5
0001dc  4983              LDR      r1,|L10.1004|
0001de  7008              STRB     r0,[r1,#0]
                  |L10.480|
;;;436            }
;;;437            break;
0001e0  e1e0              B        |L10.1444|
0001e2  e1d8              B        |L10.1430|
0001e4  e1d1              B        |L10.1418|
0001e6  e184              B        |L10.1266|
0001e8  e14f              B        |L10.1162|
0001ea  e127              B        |L10.1084|
0001ec  e0ea              B        |L10.964|
0001ee  e0d6              B        |L10.926|
0001f0  e0cc              B        |L10.908|
0001f2  e7ff              B        |L10.500|
                  |L10.500|
;;;438        case RF_STATE_RX_RUNNING:
;;;439            if( RxPacketSize > RF_BUFFER_SIZE_MAX )
0001f4  488d              LDR      r0,|L10.1068|
0001f6  8800              LDRH     r0,[r0,#0]  ; RxPacketSize
0001f8  f5b07f80          CMP      r0,#0x100
0001fc  dd03              BLE      |L10.518|
;;;440            {
;;;441                RFState = RF_STATE_RX_LEN_ERROR;
0001fe  2006              MOVS     r0,#6
000200  497a              LDR      r1,|L10.1004|
000202  7008              STRB     r0,[r1,#0]
;;;442                break;
000204  e1ce              B        |L10.1444|
                  |L10.518|
;;;443            }
;;;444    #if 1
;;;445            if( DIO1 == 1 ) // FifoLevel
000206  f7fffffe          BL       SX1276ReadDio1
00020a  2801              CMP      r0,#1
00020c  d153              BNE      |L10.694|
;;;446            {
;;;447                if( ( RxPacketSize == 0 ) && ( RxBytesRead == 0 ) ) // Read received packet size
00020e  4887              LDR      r0,|L10.1068|
000210  8800              LDRH     r0,[r0,#0]  ; RxPacketSize
000212  b9a8              CBNZ     r0,|L10.576|
000214  4884              LDR      r0,|L10.1064|
000216  7800              LDRB     r0,[r0,#0]  ; RxBytesRead
000218  b990              CBNZ     r0,|L10.576|
;;;448                {
;;;449                    if( ( SX1276->RegPacketConfig1 & RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE ) == RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE )
00021a  4875              LDR      r0,|L10.1008|
00021c  6800              LDR      r0,[r0,#0]  ; SX1276
00021e  f8900030          LDRB     r0,[r0,#0x30]
000222  f0000080          AND      r0,r0,#0x80
000226  2880              CMP      r0,#0x80
000228  d104              BNE      |L10.564|
;;;450                    {
;;;451                        SX1276ReadFifo( ( uint8_t* )&RxPacketSize, 1 );
00022a  2101              MOVS     r1,#1
00022c  487f              LDR      r0,|L10.1068|
00022e  f7fffffe          BL       SX1276ReadFifo
000232  e005              B        |L10.576|
                  |L10.564|
;;;452                    }
;;;453                    else
;;;454                    {
;;;455                        RxPacketSize = SX1276->RegPayloadLength;
000234  486e              LDR      r0,|L10.1008|
000236  6800              LDR      r0,[r0,#0]  ; SX1276
000238  f8900032          LDRB     r0,[r0,#0x32]
00023c  497b              LDR      r1,|L10.1068|
00023e  8008              STRH     r0,[r1,#0]
                  |L10.576|
;;;456                    }
;;;457                }
;;;458    
;;;459                if( ( RxPacketSize - RxBytesRead ) > ( SX1276->RegFifoThresh & 0x3F ) )
000240  487a              LDR      r0,|L10.1068|
000242  8800              LDRH     r0,[r0,#0]  ; RxPacketSize
000244  4978              LDR      r1,|L10.1064|
000246  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
000248  1a40              SUBS     r0,r0,r1
00024a  4969              LDR      r1,|L10.1008|
00024c  6809              LDR      r1,[r1,#0]  ; SX1276
00024e  f8911035          LDRB     r1,[r1,#0x35]
000252  f001013f          AND      r1,r1,#0x3f
000256  4288              CMP      r0,r1
000258  dd17              BLE      |L10.650|
;;;460                {
;;;461                    SX1276ReadFifo( ( RFBuffer + RxBytesRead ), ( SX1276->RegFifoThresh & 0x3F ) );
00025a  4a65              LDR      r2,|L10.1008|
00025c  6812              LDR      r2,[r2,#0]  ; SX1276
00025e  f8922035          LDRB     r2,[r2,#0x35]
000262  f002013f          AND      r1,r2,#0x3f
000266  4a63              LDR      r2,|L10.1012|
000268  4b6f              LDR      r3,|L10.1064|
00026a  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
00026c  18d0              ADDS     r0,r2,r3
00026e  f7fffffe          BL       SX1276ReadFifo
;;;462                    RxBytesRead += ( SX1276->RegFifoThresh & 0x3F );
000272  485f              LDR      r0,|L10.1008|
000274  6800              LDR      r0,[r0,#0]  ; SX1276
000276  f8900035          LDRB     r0,[r0,#0x35]
00027a  f000003f          AND      r0,r0,#0x3f
00027e  496a              LDR      r1,|L10.1064|
000280  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
000282  4408              ADD      r0,r0,r1
000284  4968              LDR      r1,|L10.1064|
000286  7008              STRB     r0,[r1,#0]
000288  e015              B        |L10.694|
                  |L10.650|
;;;463                }
;;;464                else
;;;465                {
;;;466                    SX1276ReadFifo( ( RFBuffer + RxBytesRead ), RxPacketSize - RxBytesRead );
00028a  4a68              LDR      r2,|L10.1068|
00028c  7812              LDRB     r2,[r2,#0]  ; RxPacketSize
00028e  4b66              LDR      r3,|L10.1064|
000290  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
000292  1ad2              SUBS     r2,r2,r3
000294  b2d1              UXTB     r1,r2
000296  4a57              LDR      r2,|L10.1012|
000298  4b63              LDR      r3,|L10.1064|
00029a  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
00029c  18d0              ADDS     r0,r2,r3
00029e  f7fffffe          BL       SX1276ReadFifo
;;;467                    RxBytesRead += ( RxPacketSize - RxBytesRead );
0002a2  4862              LDR      r0,|L10.1068|
0002a4  7800              LDRB     r0,[r0,#0]  ; RxPacketSize
0002a6  4960              LDR      r1,|L10.1064|
0002a8  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
0002aa  1a40              SUBS     r0,r0,r1
0002ac  495e              LDR      r1,|L10.1064|
0002ae  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
0002b0  4408              ADD      r0,r0,r1
0002b2  495d              LDR      r1,|L10.1064|
0002b4  7008              STRB     r0,[r1,#0]
                  |L10.694|
;;;468                }
;;;469            }
;;;470    #endif
;;;471            if( DIO0 == 1 ) // PayloadReady/CrcOk
0002b6  f7fffffe          BL       SX1276ReadDio0
0002ba  2801              CMP      r0,#1
0002bc  d156              BNE      |L10.876|
;;;472            {
;;;473                RxTimeoutTimer = GET_TICK_COUNT( );
0002be  4854              LDR      r0,|L10.1040|
0002c0  6800              LDR      r0,[r0,#0]  ; TickCounter
0002c2  4954              LDR      r1,|L10.1044|
0002c4  6008              STR      r0,[r1,#0]  ; RxTimeoutTimer
;;;474                if( ( RxPacketSize == 0 ) && ( RxBytesRead == 0 ) ) // Read received packet size
0002c6  4859              LDR      r0,|L10.1068|
0002c8  8800              LDRH     r0,[r0,#0]  ; RxPacketSize
0002ca  bb90              CBNZ     r0,|L10.818|
0002cc  4856              LDR      r0,|L10.1064|
0002ce  7800              LDRB     r0,[r0,#0]  ; RxBytesRead
0002d0  bb78              CBNZ     r0,|L10.818|
;;;475                {
;;;476                    if( ( SX1276->RegPacketConfig1 & RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE ) == RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE )
0002d2  4847              LDR      r0,|L10.1008|
0002d4  6800              LDR      r0,[r0,#0]  ; SX1276
0002d6  f8900030          LDRB     r0,[r0,#0x30]
0002da  f0000080          AND      r0,r0,#0x80
0002de  2880              CMP      r0,#0x80
0002e0  d104              BNE      |L10.748|
;;;477                    {
;;;478                        SX1276ReadFifo( ( uint8_t* )&RxPacketSize, 1 );
0002e2  2101              MOVS     r1,#1
0002e4  4851              LDR      r0,|L10.1068|
0002e6  f7fffffe          BL       SX1276ReadFifo
0002ea  e005              B        |L10.760|
                  |L10.748|
;;;479                    }
;;;480                    else
;;;481                    {
;;;482                        RxPacketSize = SX1276->RegPayloadLength;
0002ec  4840              LDR      r0,|L10.1008|
0002ee  6800              LDR      r0,[r0,#0]  ; SX1276
0002f0  f8900032          LDRB     r0,[r0,#0x32]
0002f4  494d              LDR      r1,|L10.1068|
0002f6  8008              STRH     r0,[r1,#0]
                  |L10.760|
;;;483                    }
;;;484                    SX1276ReadFifo( RFBuffer + RxBytesRead, RxPacketSize - RxBytesRead );
0002f8  4a4c              LDR      r2,|L10.1068|
0002fa  7812              LDRB     r2,[r2,#0]  ; RxPacketSize
0002fc  4b4a              LDR      r3,|L10.1064|
0002fe  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
000300  1ad2              SUBS     r2,r2,r3
000302  b2d1              UXTB     r1,r2
000304  4a3b              LDR      r2,|L10.1012|
000306  4b48              LDR      r3,|L10.1064|
000308  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
00030a  18d0              ADDS     r0,r2,r3
00030c  f7fffffe          BL       SX1276ReadFifo
;;;485                    RxBytesRead += ( RxPacketSize - RxBytesRead );
000310  4846              LDR      r0,|L10.1068|
000312  7800              LDRB     r0,[r0,#0]  ; RxPacketSize
000314  4944              LDR      r1,|L10.1064|
000316  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
000318  1a40              SUBS     r0,r0,r1
00031a  4943              LDR      r1,|L10.1064|
00031c  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
00031e  4408              ADD      r0,r0,r1
000320  4941              LDR      r1,|L10.1064|
000322  7008              STRB     r0,[r1,#0]
;;;486                    PacketDetected = true;
000324  2001              MOVS     r0,#1
000326  493f              LDR      r1,|L10.1060|
000328  7008              STRB     r0,[r1,#0]
;;;487                    RFState = RF_STATE_RX_DONE;
00032a  2004              MOVS     r0,#4
00032c  492f              LDR      r1,|L10.1004|
00032e  7008              STRB     r0,[r1,#0]
000330  e01c              B        |L10.876|
                  |L10.818|
000332  e7ff              B        |L10.820|
                  |L10.820|
;;;488                }
;;;489                else
;;;490                {
;;;491                    SX1276ReadFifo( RFBuffer + RxBytesRead, RxPacketSize - RxBytesRead );
000334  4a3d              LDR      r2,|L10.1068|
000336  7812              LDRB     r2,[r2,#0]  ; RxPacketSize
000338  4b3b              LDR      r3,|L10.1064|
00033a  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
00033c  1ad2              SUBS     r2,r2,r3
00033e  b2d1              UXTB     r1,r2
000340  4a2c              LDR      r2,|L10.1012|
000342  4b39              LDR      r3,|L10.1064|
000344  781b              LDRB     r3,[r3,#0]  ; RxBytesRead
000346  18d0              ADDS     r0,r2,r3
000348  f7fffffe          BL       SX1276ReadFifo
;;;492                    RxBytesRead += ( RxPacketSize - RxBytesRead );
00034c  4837              LDR      r0,|L10.1068|
00034e  7800              LDRB     r0,[r0,#0]  ; RxPacketSize
000350  4935              LDR      r1,|L10.1064|
000352  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
000354  1a40              SUBS     r0,r0,r1
000356  4934              LDR      r1,|L10.1064|
000358  7809              LDRB     r1,[r1,#0]  ; RxBytesRead
00035a  4408              ADD      r0,r0,r1
00035c  4932              LDR      r1,|L10.1064|
00035e  7008              STRB     r0,[r1,#0]
;;;493                    PacketDetected = true;
000360  2001              MOVS     r0,#1
000362  4930              LDR      r1,|L10.1060|
000364  7008              STRB     r0,[r1,#0]
;;;494                    RFState = RF_STATE_RX_DONE;
000366  2004              MOVS     r0,#4
000368  4920              LDR      r1,|L10.1004|
00036a  7008              STRB     r0,[r1,#0]
                  |L10.876|
;;;495                }
;;;496            }
;;;497            
;;;498            // Packet timeout
;;;499            if( ( PacketDetected == false ) && ( ( GET_TICK_COUNT( ) - RxTimeoutTimer ) > PacketTimeout ) )
00036c  482d              LDR      r0,|L10.1060|
00036e  7800              LDRB     r0,[r0,#0]  ; PacketDetected
000370  b958              CBNZ     r0,|L10.906|
000372  4827              LDR      r0,|L10.1040|
000374  6800              LDR      r0,[r0,#0]  ; TickCounter
000376  4927              LDR      r1,|L10.1044|
000378  6809              LDR      r1,[r1,#0]  ; RxTimeoutTimer
00037a  1a40              SUBS     r0,r0,r1
00037c  4922              LDR      r1,|L10.1032|
00037e  6809              LDR      r1,[r1,#0]  ; PacketTimeout
000380  4288              CMP      r0,r1
000382  d902              BLS      |L10.906|
;;;500            {
;;;501                RFState = RF_STATE_RX_TIMEOUT;
000384  2005              MOVS     r0,#5
000386  4919              LDR      r1,|L10.1004|
000388  7008              STRB     r0,[r1,#0]
                  |L10.906|
;;;502            }
;;;503            break;
00038a  e10b              B        |L10.1444|
                  |L10.908|
;;;504        case RF_STATE_RX_DONE:
;;;505            RxBytesRead = 0;
00038c  2000              MOVS     r0,#0
00038e  4926              LDR      r1,|L10.1064|
000390  7008              STRB     r0,[r1,#0]
;;;506            RFState = RF_STATE_RX_INIT;
000392  2001              MOVS     r0,#1
000394  4915              LDR      r1,|L10.1004|
000396  7008              STRB     r0,[r1,#0]
;;;507            result = RF_RX_DONE;
000398  2002              MOVS     r0,#2
00039a  9008              STR      r0,[sp,#0x20]
;;;508            break;
00039c  e102              B        |L10.1444|
                  |L10.926|
;;;509        case RF_STATE_RX_TIMEOUT:
;;;510            RxBytesRead = 0;
00039e  2000              MOVS     r0,#0
0003a0  4921              LDR      r1,|L10.1064|
0003a2  7008              STRB     r0,[r1,#0]
;;;511            RxPacketSize = 0;
0003a4  4921              LDR      r1,|L10.1068|
0003a6  8008              STRH     r0,[r1,#0]
;;;512            SX1276Write( REG_RXCONFIG, SX1276->RegRxConfig | RF_RXCONFIG_RESTARTRXWITHPLLLOCK );
0003a8  4811              LDR      r0,|L10.1008|
0003aa  6800              LDR      r0,[r0,#0]  ; SX1276
0003ac  7b40              LDRB     r0,[r0,#0xd]
0003ae  f0400120          ORR      r1,r0,#0x20
0003b2  200d              MOVS     r0,#0xd
0003b4  f7fffffe          BL       SX1276Write
;;;513            RFState = RF_STATE_RX_INIT;
0003b8  2001              MOVS     r0,#1
0003ba  490c              LDR      r1,|L10.1004|
0003bc  7008              STRB     r0,[r1,#0]
;;;514            result = RF_RX_TIMEOUT;
0003be  2003              MOVS     r0,#3
0003c0  9008              STR      r0,[sp,#0x20]
;;;515            break;
0003c2  e0ef              B        |L10.1444|
                  |L10.964|
;;;516        case RF_STATE_RX_LEN_ERROR:
;;;517            RxBytesRead = 0;
0003c4  2000              MOVS     r0,#0
0003c6  4918              LDR      r1,|L10.1064|
0003c8  7008              STRB     r0,[r1,#0]
;;;518            RxPacketSize = 0;
0003ca  4918              LDR      r1,|L10.1068|
0003cc  8008              STRH     r0,[r1,#0]
;;;519            SX1276Write( REG_RXCONFIG, SX1276->RegRxConfig | RF_RXCONFIG_RESTARTRXWITHPLLLOCK );
0003ce  4808              LDR      r0,|L10.1008|
0003d0  6800              LDR      r0,[r0,#0]  ; SX1276
0003d2  7b40              LDRB     r0,[r0,#0xd]
0003d4  f0400120          ORR      r1,r0,#0x20
0003d8  200d              MOVS     r0,#0xd
0003da  f7fffffe          BL       SX1276Write
;;;520            RFState = RF_STATE_RX_INIT;
0003de  2001              MOVS     r0,#1
0003e0  4902              LDR      r1,|L10.1004|
0003e2  7008              STRB     r0,[r1,#0]
;;;521            result = RF_LEN_ERROR;
0003e4  2006              MOVS     r0,#6
0003e6  9008              STR      r0,[sp,#0x20]
;;;522            break;
0003e8  e0dc              B        |L10.1444|
0003ea  0000              DCW      0x0000
                  |L10.1004|
                          DCD      RFState
                  |L10.1008|
                          DCD      SX1276
                  |L10.1012|
                          DCD      RFBuffer
                  |L10.1016|
                          DCD      FskSettings
                  |L10.1020|
                          DCD      0x40200000
                  |L10.1024|
                          DCD      0x408f4000
                  |L10.1028|
                          DCD      0x3ff00000
                  |L10.1032|
                          DCD      PacketTimeout
                  |L10.1036|
                          DCD      Preamble2SyncTimeout
                  |L10.1040|
                          DCD      TickCounter
                  |L10.1044|
                          DCD      RxTimeoutTimer
                  |L10.1048|
                          DCD      Preamble2SyncTimer
                  |L10.1052|
                          DCD      PreambleDetected
                  |L10.1056|
                          DCD      SyncWordDetected
                  |L10.1060|
                          DCD      PacketDetected
                  |L10.1064|
                          DCD      RxBytesRead
                  |L10.1068|
                          DCD      RxPacketSize
                  |L10.1072|
                          DCD      RxPacketRssiValue
                  |L10.1076|
                          DCD      RxPacketAfcValue
                  |L10.1080|
                          DCD      RxGain
                  |L10.1084|
;;;523        // Tx management
;;;524        case RF_STATE_TX_INIT:
;;;525            // Packet DIO mapping setup
;;;526            //                           PacketSent,               FifoLevel,              FifoFull,               TxReady
;;;527            SX1276->RegDioMapping1 = RF_DIOMAPPING1_DIO0_00 | RF_DIOMAPPING1_DIO1_00 | RF_DIOMAPPING1_DIO2_00 | RF_DIOMAPPING1_DIO3_01;
00043c  2001              MOVS     r0,#1
00043e  495c              LDR      r1,|L10.1456|
000440  6809              LDR      r1,[r1,#0]  ; SX1276
000442  f8810040          STRB     r0,[r1,#0x40]
;;;528            //                           LowBat,                   Data
;;;529            SX1276->RegDioMapping2 = RF_DIOMAPPING2_DIO4_00 | RF_DIOMAPPING2_DIO5_10;
000446  2020              MOVS     r0,#0x20
000448  4959              LDR      r1,|L10.1456|
00044a  6809              LDR      r1,[r1,#0]  ; SX1276
00044c  f8810041          STRB     r0,[r1,#0x41]
;;;530            SX1276WriteBuffer( REG_DIOMAPPING1, &SX1276->RegDioMapping1, 2 );
000450  2202              MOVS     r2,#2
000452  4857              LDR      r0,|L10.1456|
000454  6801              LDR      r1,[r0,#0]  ; SX1276
000456  3140              ADDS     r1,r1,#0x40
000458  2040              MOVS     r0,#0x40
00045a  f7fffffe          BL       SX1276WriteBuffer
;;;531    
;;;532            SX1276->RegFifoThresh = RF_FIFOTHRESH_TXSTARTCONDITION_FIFONOTEMPTY | 0x18; // 24 bytes of data
00045e  2098              MOVS     r0,#0x98
000460  4953              LDR      r1,|L10.1456|
000462  6809              LDR      r1,[r1,#0]  ; SX1276
000464  f8810035          STRB     r0,[r1,#0x35]
;;;533            SX1276Write( REG_FIFOTHRESH, SX1276->RegFifoThresh );
000468  4851              LDR      r0,|L10.1456|
00046a  6800              LDR      r0,[r0,#0]  ; SX1276
00046c  f8901035          LDRB     r1,[r0,#0x35]
000470  2035              MOVS     r0,#0x35
000472  f7fffffe          BL       SX1276Write
;;;534    
;;;535            SX1276FskSetOpMode( RF_OPMODE_TRANSMITTER );
000476  2003              MOVS     r0,#3
000478  f7fffffe          BL       SX1276FskSetOpMode
;;;536            RFState = RF_STATE_TX_READY_WAIT;
00047c  2008              MOVS     r0,#8
00047e  494d              LDR      r1,|L10.1460|
000480  7008              STRB     r0,[r1,#0]
;;;537            TxBytesSent = 0;
000482  2000              MOVS     r0,#0
000484  494c              LDR      r1,|L10.1464|
000486  7008              STRB     r0,[r1,#0]
;;;538            break;
000488  e08c              B        |L10.1444|
                  |L10.1162|
;;;539        case RF_STATE_TX_READY_WAIT:
;;;540            if( DIO3 == 1 )    // TxReady
00048a  f7fffffe          BL       SX1276ReadDio3
00048e  2801              CMP      r0,#1
000490  d12e              BNE      |L10.1264|
;;;541            {
;;;542                if( ( SX1276->RegPacketConfig1 & RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE ) == RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE )
000492  4847              LDR      r0,|L10.1456|
000494  6800              LDR      r0,[r0,#0]  ; SX1276
000496  f8900030          LDRB     r0,[r0,#0x30]
00049a  f0000080          AND      r0,r0,#0x80
00049e  2880              CMP      r0,#0x80
0004a0  d103              BNE      |L10.1194|
;;;543                {
;;;544                    SX1276WriteFifo( ( uint8_t* )&TxPacketSize, 1 );
0004a2  2101              MOVS     r1,#1
0004a4  4845              LDR      r0,|L10.1468|
0004a6  f7fffffe          BL       SX1276WriteFifo
                  |L10.1194|
;;;545                }
;;;546                
;;;547                if( ( TxPacketSize > 0 ) && ( TxPacketSize <= 64 ) )
0004aa  4844              LDR      r0,|L10.1468|
0004ac  8800              LDRH     r0,[r0,#0]  ; TxPacketSize
0004ae  2800              CMP      r0,#0
0004b0  dd08              BLE      |L10.1220|
0004b2  4842              LDR      r0,|L10.1468|
0004b4  8800              LDRH     r0,[r0,#0]  ; TxPacketSize
0004b6  2840              CMP      r0,#0x40
0004b8  dc04              BGT      |L10.1220|
;;;548                {
;;;549                    DataChunkSize = TxPacketSize;
0004ba  4840              LDR      r0,|L10.1468|
0004bc  7800              LDRB     r0,[r0,#0]  ; TxPacketSize
0004be  4940              LDR      r1,|L10.1472|
0004c0  7008              STRB     r0,[r1,#0]
0004c2  e002              B        |L10.1226|
                  |L10.1220|
;;;550                }
;;;551                else
;;;552                {
;;;553                    DataChunkSize = 32;
0004c4  2020              MOVS     r0,#0x20
0004c6  493e              LDR      r1,|L10.1472|
0004c8  7008              STRB     r0,[r1,#0]
                  |L10.1226|
;;;554                }
;;;555                
;;;556                SX1276WriteFifo( RFBuffer, DataChunkSize );
0004ca  483d              LDR      r0,|L10.1472|
0004cc  7801              LDRB     r1,[r0,#0]  ; DataChunkSize
0004ce  483d              LDR      r0,|L10.1476|
0004d0  f7fffffe          BL       SX1276WriteFifo
;;;557                TxBytesSent += DataChunkSize;
0004d4  4838              LDR      r0,|L10.1464|
0004d6  7800              LDRB     r0,[r0,#0]  ; TxBytesSent
0004d8  4939              LDR      r1,|L10.1472|
0004da  7809              LDRB     r1,[r1,#0]  ; DataChunkSize
0004dc  4408              ADD      r0,r0,r1
0004de  4936              LDR      r1,|L10.1464|
0004e0  7008              STRB     r0,[r1,#0]
;;;558                TxTimeoutTimer = GET_TICK_COUNT( );
0004e2  4839              LDR      r0,|L10.1480|
0004e4  6800              LDR      r0,[r0,#0]  ; TickCounter
0004e6  4939              LDR      r1,|L10.1484|
0004e8  6008              STR      r0,[r1,#0]  ; TxTimeoutTimer
;;;559                RFState = RF_STATE_TX_RUNNING;
0004ea  2009              MOVS     r0,#9
0004ec  4931              LDR      r1,|L10.1460|
0004ee  7008              STRB     r0,[r1,#0]
                  |L10.1264|
;;;560            }
;;;561            break;
0004f0  e058              B        |L10.1444|
                  |L10.1266|
;;;562    
;;;563        case RF_STATE_TX_RUNNING:
;;;564            if( DIO1 == 0 )    // FifoLevel below thresold
0004f2  f7fffffe          BL       SX1276ReadDio1
0004f6  bb70              CBNZ     r0,|L10.1366|
;;;565            {  
;;;566                if( ( TxPacketSize - TxBytesSent ) > DataChunkSize )
0004f8  4830              LDR      r0,|L10.1468|
0004fa  8800              LDRH     r0,[r0,#0]  ; TxPacketSize
0004fc  492e              LDR      r1,|L10.1464|
0004fe  7809              LDRB     r1,[r1,#0]  ; TxBytesSent
000500  1a40              SUBS     r0,r0,r1
000502  492f              LDR      r1,|L10.1472|
000504  7809              LDRB     r1,[r1,#0]  ; DataChunkSize
000506  4288              CMP      r0,r1
000508  dd0f              BLE      |L10.1322|
;;;567                {
;;;568                    SX1276WriteFifo( ( RFBuffer + TxBytesSent ), DataChunkSize );
00050a  492e              LDR      r1,|L10.1476|
00050c  4a2a              LDR      r2,|L10.1464|
00050e  7812              LDRB     r2,[r2,#0]  ; TxBytesSent
000510  1888              ADDS     r0,r1,r2
000512  492b              LDR      r1,|L10.1472|
000514  7809              LDRB     r1,[r1,#0]  ; DataChunkSize
000516  f7fffffe          BL       SX1276WriteFifo
;;;569                    TxBytesSent += DataChunkSize;
00051a  4827              LDR      r0,|L10.1464|
00051c  7800              LDRB     r0,[r0,#0]  ; TxBytesSent
00051e  4928              LDR      r1,|L10.1472|
000520  7809              LDRB     r1,[r1,#0]  ; DataChunkSize
000522  4408              ADD      r0,r0,r1
000524  4924              LDR      r1,|L10.1464|
000526  7008              STRB     r0,[r1,#0]
000528  e015              B        |L10.1366|
                  |L10.1322|
;;;570                }
;;;571                else 
;;;572                {
;;;573                    // we write the last chunk of data
;;;574                    SX1276WriteFifo( RFBuffer + TxBytesSent, TxPacketSize - TxBytesSent );
00052a  4a24              LDR      r2,|L10.1468|
00052c  7812              LDRB     r2,[r2,#0]  ; TxPacketSize
00052e  4b22              LDR      r3,|L10.1464|
000530  781b              LDRB     r3,[r3,#0]  ; TxBytesSent
000532  1ad2              SUBS     r2,r2,r3
000534  b2d1              UXTB     r1,r2
000536  4a23              LDR      r2,|L10.1476|
000538  4b1f              LDR      r3,|L10.1464|
00053a  781b              LDRB     r3,[r3,#0]  ; TxBytesSent
00053c  18d0              ADDS     r0,r2,r3
00053e  f7fffffe          BL       SX1276WriteFifo
;;;575                    TxBytesSent += TxPacketSize - TxBytesSent;
000542  481e              LDR      r0,|L10.1468|
000544  7800              LDRB     r0,[r0,#0]  ; TxPacketSize
000546  491c              LDR      r1,|L10.1464|
000548  7809              LDRB     r1,[r1,#0]  ; TxBytesSent
00054a  1a40              SUBS     r0,r0,r1
00054c  491a              LDR      r1,|L10.1464|
00054e  7809              LDRB     r1,[r1,#0]  ; TxBytesSent
000550  4408              ADD      r0,r0,r1
000552  4919              LDR      r1,|L10.1464|
000554  7008              STRB     r0,[r1,#0]
                  |L10.1366|
;;;576                }
;;;577            }
;;;578    
;;;579            if( DIO0 == 1 ) // PacketSent
000556  f7fffffe          BL       SX1276ReadDio0
00055a  2801              CMP      r0,#1
00055c  d109              BNE      |L10.1394|
;;;580            {
;;;581                TxTimeoutTimer = GET_TICK_COUNT( );
00055e  481a              LDR      r0,|L10.1480|
000560  6800              LDR      r0,[r0,#0]  ; TickCounter
000562  491a              LDR      r1,|L10.1484|
000564  6008              STR      r0,[r1,#0]  ; TxTimeoutTimer
;;;582                RFState = RF_STATE_TX_DONE;
000566  200a              MOVS     r0,#0xa
000568  4912              LDR      r1,|L10.1460|
00056a  7008              STRB     r0,[r1,#0]
;;;583                SX1276FskSetOpMode( RF_OPMODE_STANDBY );
00056c  2001              MOVS     r0,#1
00056e  f7fffffe          BL       SX1276FskSetOpMode
                  |L10.1394|
;;;584            }
;;;585             
;;;586            // Packet timeout
;;;587            if( ( GET_TICK_COUNT( ) - TxTimeoutTimer ) > TICK_RATE_MS( 1000 ) )
000572  4815              LDR      r0,|L10.1480|
000574  6800              LDR      r0,[r0,#0]  ; TickCounter
000576  4915              LDR      r1,|L10.1484|
000578  6809              LDR      r1,[r1,#0]  ; TxTimeoutTimer
00057a  1a40              SUBS     r0,r0,r1
00057c  f5b07f7a          CMP      r0,#0x3e8
000580  d902              BLS      |L10.1416|
;;;588            {
;;;589                RFState = RF_STATE_TX_TIMEOUT;
000582  200b              MOVS     r0,#0xb
000584  490b              LDR      r1,|L10.1460|
000586  7008              STRB     r0,[r1,#0]
                  |L10.1416|
;;;590            }
;;;591            break;
000588  e00c              B        |L10.1444|
                  |L10.1418|
;;;592        case RF_STATE_TX_DONE:
;;;593            RFState = RF_STATE_IDLE;
00058a  2000              MOVS     r0,#0
00058c  4909              LDR      r1,|L10.1460|
00058e  7008              STRB     r0,[r1,#0]
;;;594            result = RF_TX_DONE;
000590  2004              MOVS     r0,#4
000592  9008              STR      r0,[sp,#0x20]
;;;595            break;
000594  e006              B        |L10.1444|
                  |L10.1430|
;;;596        case RF_STATE_TX_TIMEOUT:
;;;597            RFState = RF_STATE_IDLE;
000596  2000              MOVS     r0,#0
000598  4906              LDR      r1,|L10.1460|
00059a  7008              STRB     r0,[r1,#0]
;;;598            result = RF_TX_TIMEOUT;
00059c  2005              MOVS     r0,#5
00059e  9008              STR      r0,[sp,#0x20]
;;;599            break;
0005a0  e000              B        |L10.1444|
                  |L10.1442|
;;;600        default:
;;;601            break;
0005a2  bf00              NOP      
                  |L10.1444|
0005a4  bf00              NOP                            ;365
;;;602        }
;;;603        return result;
0005a6  9808              LDR      r0,[sp,#0x20]
;;;604    }
0005a8  b009              ADD      sp,sp,#0x24
0005aa  e8bd8ff0          POP      {r4-r11,pc}
;;;605    
                          ENDP

0005ae  0000              DCW      0x0000
                  |L10.1456|
                          DCD      SX1276
                  |L10.1460|
                          DCD      RFState
                  |L10.1464|
                          DCD      TxBytesSent
                  |L10.1468|
                          DCD      TxPacketSize
                  |L10.1472|
                          DCD      DataChunkSize
                  |L10.1476|
                          DCD      RFBuffer
                  |L10.1480|
                          DCD      TickCounter
                  |L10.1484|
                          DCD      TxTimeoutTimer

                          AREA ||i.SX1276FskReadAfc||, CODE, READONLY, ALIGN=2

                  SX1276FskReadAfc PROC
;;;263    
;;;264    int32_t SX1276FskReadAfc( void )
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;265    {
;;;266        SX1276ReadBuffer( REG_AFCMSB, &SX1276->RegAfcMsb, 2 );                            // Reads the AFC value
000004  2202              MOVS     r2,#2
000006  4810              LDR      r0,|L11.72|
000008  6801              LDR      r1,[r0,#0]  ; SX1276
00000a  311b              ADDS     r1,r1,#0x1b
00000c  201b              MOVS     r0,#0x1b
00000e  f7fffffe          BL       SX1276ReadBuffer
;;;267        return ( int32_t )( double )( ( ( uint16_t )SX1276->RegAfcMsb << 8 ) | ( uint16_t )SX1276->RegAfcLsb ) * ( double )FREQ_STEP;
000012  490d              LDR      r1,|L11.72|
000014  6809              LDR      r1,[r1,#0]  ; SX1276
000016  7f09              LDRB     r1,[r1,#0x1c]
000018  4a0b              LDR      r2,|L11.72|
00001a  6812              LDR      r2,[r2,#0]  ; SX1276
00001c  7ed2              LDRB     r2,[r2,#0x1b]
00001e  ea412002          ORR      r0,r1,r2,LSL #8
000022  f7fffffe          BL       __aeabi_i2d
000026  4680              MOV      r8,r0
000028  f7fffffe          BL       __aeabi_d2iz
00002c  4682              MOV      r10,r0
00002e  f7fffffe          BL       __aeabi_i2d
000032  4606              MOV      r6,r0
000034  2200              MOVS     r2,#0
000036  4b05              LDR      r3,|L11.76|
000038  f7fffffe          BL       __aeabi_dmul
00003c  4604              MOV      r4,r0
00003e  f7fffffe          BL       __aeabi_d2iz
;;;268    }
000042  e8bd87f0          POP      {r4-r10,pc}
;;;269    
                          ENDP

000046  0000              DCW      0x0000
                  |L11.72|
                          DCD      SX1276
                  |L11.76|
                          DCD      0x404e8480

                          AREA ||i.SX1276FskReadFei||, CODE, READONLY, ALIGN=2

                  SX1276FskReadFei PROC
;;;256    
;;;257    int32_t SX1276FskReadFei( void )
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;258    {
;;;259        SX1276ReadBuffer( REG_FEIMSB, &SX1276->RegFeiMsb, 2 );                          // Reads the FEI value
000004  2202              MOVS     r2,#2
000006  4810              LDR      r0,|L12.72|
000008  6801              LDR      r1,[r0,#0]  ; SX1276
00000a  311d              ADDS     r1,r1,#0x1d
00000c  201d              MOVS     r0,#0x1d
00000e  f7fffffe          BL       SX1276ReadBuffer
;;;260    
;;;261        return ( int32_t )( double )( ( ( uint16_t )SX1276->RegFeiMsb << 8 ) | ( uint16_t )SX1276->RegFeiLsb ) * ( double )FREQ_STEP;
000012  490d              LDR      r1,|L12.72|
000014  6809              LDR      r1,[r1,#0]  ; SX1276
000016  7f89              LDRB     r1,[r1,#0x1e]
000018  4a0b              LDR      r2,|L12.72|
00001a  6812              LDR      r2,[r2,#0]  ; SX1276
00001c  7f52              LDRB     r2,[r2,#0x1d]
00001e  ea412002          ORR      r0,r1,r2,LSL #8
000022  f7fffffe          BL       __aeabi_i2d
000026  4680              MOV      r8,r0
000028  f7fffffe          BL       __aeabi_d2iz
00002c  4682              MOV      r10,r0
00002e  f7fffffe          BL       __aeabi_i2d
000032  4606              MOV      r6,r0
000034  2200              MOVS     r2,#0
000036  4b05              LDR      r3,|L12.76|
000038  f7fffffe          BL       __aeabi_dmul
00003c  4604              MOV      r4,r0
00003e  f7fffffe          BL       __aeabi_d2iz
;;;262    }
000042  e8bd87f0          POP      {r4-r10,pc}
;;;263    
                          ENDP

000046  0000              DCW      0x0000
                  |L12.72|
                          DCD      SX1276
                  |L12.76|
                          DCD      0x404e8480

                          AREA ||i.SX1276FskReadRssi||, CODE, READONLY, ALIGN=2

                  SX1276FskReadRssi PROC
;;;275    
;;;276    double SX1276FskReadRssi( void )
000000  b570              PUSH     {r4-r6,lr}
;;;277    {
;;;278        SX1276Read( REG_RSSIVALUE, &SX1276->RegRssiValue );                               // Reads the RSSI value
000002  480a              LDR      r0,|L13.44|
000004  6801              LDR      r1,[r0,#0]  ; SX1276
000006  3111              ADDS     r1,r1,#0x11
000008  2011              MOVS     r0,#0x11
00000a  f7fffffe          BL       SX1276Read
;;;279    
;;;280        return -( double )( ( double )SX1276->RegRssiValue / 2.0 );
00000e  4907              LDR      r1,|L13.44|
000010  6809              LDR      r1,[r1,#0]  ; SX1276
000012  7c48              LDRB     r0,[r1,#0x11]
000014  f7fffffe          BL       __aeabi_ui2d
000018  4604              MOV      r4,r0
00001a  2200              MOVS     r2,#0
00001c  f04f4380          MOV      r3,#0x40000000
000020  f7fffffe          BL       __aeabi_ddiv
000024  f0814100          EOR      r1,r1,#0x80000000
;;;281    }
000028  bd70              POP      {r4-r6,pc}
;;;282    
                          ENDP

00002a  0000              DCW      0x0000
                  |L13.44|
                          DCD      SX1276

                          AREA ||i.SX1276FskReadRxGain||, CODE, READONLY, ALIGN=2

                  SX1276FskReadRxGain PROC
;;;269    
;;;270    uint8_t SX1276FskReadRxGain( void )
000000  b510              PUSH     {r4,lr}
;;;271    {
;;;272        SX1276Read( REG_LNA, &SX1276->RegLna );
000002  4805              LDR      r0,|L14.24|
000004  6801              LDR      r1,[r0,#0]  ; SX1276
000006  310c              ADDS     r1,r1,#0xc
000008  200c              MOVS     r0,#0xc
00000a  f7fffffe          BL       SX1276Read
;;;273        return( SX1276->RegLna >> 5 ) & 0x07;
00000e  4802              LDR      r0,|L14.24|
000010  6800              LDR      r0,[r0,#0]  ; SX1276
000012  7b00              LDRB     r0,[r0,#0xc]
000014  0940              LSRS     r0,r0,#5
;;;274    }
000016  bd10              POP      {r4,pc}
;;;275    
                          ENDP

                  |L14.24|
                          DCD      SX1276

                          AREA ||i.SX1276FskSetDefaults||, CODE, READONLY, ALIGN=2

                  SX1276FskSetDefaults PROC
;;;213    
;;;214    void SX1276FskSetDefaults( void )
000000  b510              PUSH     {r4,lr}
;;;215    {
;;;216        // REMARK: See SX1276 datasheet for modified default values.
;;;217    
;;;218        SX1276Read( REG_VERSION, &SX1276->RegVersion );
000002  4803              LDR      r0,|L15.16|
000004  6801              LDR      r1,[r0,#0]  ; SX1276
000006  3142              ADDS     r1,r1,#0x42
000008  2042              MOVS     r0,#0x42
00000a  f7fffffe          BL       SX1276Read
;;;219    }
00000e  bd10              POP      {r4,pc}
;;;220    
                          ENDP

                  |L15.16|
                          DCD      SX1276

                          AREA ||i.SX1276FskSetOpMode||, CODE, READONLY, ALIGN=2

                  SX1276FskSetOpMode PROC
;;;220    
;;;221    void SX1276FskSetOpMode( uint8_t opMode )
000000  b570              PUSH     {r4-r6,lr}
;;;222    {
000002  4604              MOV      r4,r0
;;;223        static uint8_t opModePrev = RF_OPMODE_STANDBY;
;;;224        static bool antennaSwitchTxOnPrev = true;
;;;225        bool antennaSwitchTxOn = false;
000004  2500              MOVS     r5,#0
;;;226    
;;;227        opModePrev = SX1276->RegOpMode & ~RF_OPMODE_MASK;
000006  4814              LDR      r0,|L16.88|
000008  6800              LDR      r0,[r0,#0]  ; SX1276
00000a  7840              LDRB     r0,[r0,#1]
00000c  f02000f8          BIC      r0,r0,#0xf8
000010  4912              LDR      r1,|L16.92|
000012  7008              STRB     r0,[r1,#0]
;;;228    
;;;229        if( opMode != opModePrev )
000014  4608              MOV      r0,r1
000016  7800              LDRB     r0,[r0,#0]  ; opModePrev
000018  4284              CMP      r4,r0
00001a  d01c              BEQ      |L16.86|
;;;230        {
;;;231            if( opMode == RF_OPMODE_TRANSMITTER )
00001c  2c03              CMP      r4,#3
00001e  d101              BNE      |L16.36|
;;;232            {
;;;233                antennaSwitchTxOn = true;
000020  2501              MOVS     r5,#1
000022  e000              B        |L16.38|
                  |L16.36|
;;;234            }
;;;235            else
;;;236            {
;;;237                antennaSwitchTxOn = false;
000024  2500              MOVS     r5,#0
                  |L16.38|
;;;238            }
;;;239            if( antennaSwitchTxOn != antennaSwitchTxOnPrev )
000026  480e              LDR      r0,|L16.96|
000028  7800              LDRB     r0,[r0,#0]  ; antennaSwitchTxOnPrev
00002a  4285              CMP      r5,r0
00002c  d004              BEQ      |L16.56|
;;;240            {
;;;241                antennaSwitchTxOnPrev = antennaSwitchTxOn;
00002e  480c              LDR      r0,|L16.96|
000030  7005              STRB     r5,[r0,#0]
;;;242                RXTX( antennaSwitchTxOn ); // Antenna switch control
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       SX1276WriteRxTx
                  |L16.56|
;;;243            }
;;;244            SX1276->RegOpMode = ( SX1276->RegOpMode & RF_OPMODE_MASK ) | opMode;
000038  4807              LDR      r0,|L16.88|
00003a  6800              LDR      r0,[r0,#0]  ; SX1276
00003c  7840              LDRB     r0,[r0,#1]
00003e  f00000f8          AND      r0,r0,#0xf8
000042  4320              ORRS     r0,r0,r4
000044  4904              LDR      r1,|L16.88|
000046  6809              LDR      r1,[r1,#0]  ; SX1276
000048  7048              STRB     r0,[r1,#1]
;;;245    
;;;246            SX1276Write( REG_OPMODE, SX1276->RegOpMode );        
00004a  4803              LDR      r0,|L16.88|
00004c  6800              LDR      r0,[r0,#0]  ; SX1276
00004e  7841              LDRB     r1,[r0,#1]
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       SX1276Write
                  |L16.86|
;;;247        }
;;;248    }
000056  bd70              POP      {r4-r6,pc}
;;;249    
                          ENDP

                  |L16.88|
                          DCD      SX1276
                  |L16.92|
                          DCD      opModePrev
                  |L16.96|
                          DCD      antennaSwitchTxOnPrev

                          AREA ||i.SX1276FskSetRFState||, CODE, READONLY, ALIGN=2

                  SX1276FskSetRFState PROC
;;;352    
;;;353    void SX1276FskSetRFState( uint8_t state )
000000  4901              LDR      r1,|L17.8|
;;;354    {
;;;355        RFState = state;
000002  7008              STRB     r0,[r1,#0]
;;;356    }
000004  4770              BX       lr
;;;357    
                          ENDP

000006  0000              DCW      0x0000
                  |L17.8|
                          DCD      RFState

                          AREA ||i.SX1276FskSetTxPacket||, CODE, READONLY, ALIGN=2

                  SX1276FskSetTxPacket PROC
;;;309    
;;;310    void SX1276FskSetTxPacket( const void *buffer, uint16_t size )
000000  b570              PUSH     {r4-r6,lr}
;;;311    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;312        TxPacketSize = size;
000006  4805              LDR      r0,|L18.28|
000008  8005              STRH     r5,[r0,#0]
;;;313        memcpy( ( void * )RFBuffer, buffer, ( size_t )TxPacketSize ); 
00000a  8802              LDRH     r2,[r0,#0]  ; TxPacketSize
00000c  4621              MOV      r1,r4
00000e  4804              LDR      r0,|L18.32|
000010  f7fffffe          BL       __aeabi_memcpy
;;;314    
;;;315        RFState = RF_STATE_TX_INIT;
000014  2007              MOVS     r0,#7
000016  4903              LDR      r1,|L18.36|
000018  7008              STRB     r0,[r1,#0]
;;;316    }
00001a  bd70              POP      {r4-r6,pc}
;;;317    
                          ENDP

                  |L18.28|
                          DCD      TxPacketSize
                  |L18.32|
                          DCD      RFBuffer
                  |L18.36|
                          DCD      RFState

                          AREA ||i.SX1276FskStartRx||, CODE, READONLY, ALIGN=1

                  SX1276FskStartRx PROC
;;;297    
;;;298    void SX1276FskStartRx( void )
000000  b500              PUSH     {lr}
;;;299    {
;;;300        SX1276FskSetRFState( RF_STATE_RX_INIT );
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       SX1276FskSetRFState
;;;301    }
000008  bd00              POP      {pc}
;;;302    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  RFBuffer
                          %        256

                          AREA ||.data||, DATA, ALIGN=3

                  FskSettings
                          DCD      0x33db2580
                          DCD      0x00002580
                          DCD      0x0000c350
00000c  14000000          DCB      0x14,0x00,0x00,0x00
                          DCD      0x000186a0
                          DCD      0x000249f0
000018  0101ff00          DCB      0x01,0x01,0xff,0x00
                  SX1276
                          DCD      0x00000000
                  DataChunkSize
000020  20                DCB      0x20
                  RFState
000021  000000            DCB      0x00,0x00,0x00
                  PacketTimeout
                          DCD      0x00000000
                  Preamble2SyncTimeout
                          DCD      0x00000000
                  PreambleDetected
00002c  00                DCB      0x00
                  SyncWordDetected
00002d  00                DCB      0x00
                  PacketDetected
00002e  0000              DCB      0x00,0x00
                  RxPacketSize
000030  0000              DCW      0x0000
                  RxBytesRead
000032  00                DCB      0x00
                  TxBytesSent
000033  00                DCB      0x00
                          DCD      0x00000000
                  RxPacketRssiValue
                          %        8
                  RxPacketAfcValue
                          DCD      0x00000000
                  RxGain
000044  01000000          DCB      0x01,0x00,0x00,0x00
                  RxTimeoutTimer
                          DCD      0x00000000
                  Preamble2SyncTimer
                          DCD      0x00000000
                  TxPacketSize
000050  0000              DCW      0x0000
000052  0000              DCB      0x00,0x00
                  TxTimeoutTimer
                          DCD      0x00000000
                  opModePrev
000058  01                DCB      0x01
                  antennaSwitchTxOnPrev
000059  01                DCB      0x01
