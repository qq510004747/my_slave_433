; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\spi.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\spi.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\J_LINK_RTT\RTT -I..\User -I..\BSP\BSP -I..\BSP\BSP_InPut -I..\BSP\BSP_OutPut -I..\BSP\BSP_FLASH -I..\BSP\BSP_USART -I..\Libraries\FreeRTOS -I..\Libraries\FreeRTOS\include -I..\Libraries\FreeRTOS\FreeRTOSConfig -I..\Libraries\FreeRTOS\portable\RVDS\ARM_CM3 -I..\BSP\OLED -I..\BSP -I..\BSP\OLED -I..\BSP\TIMER3 -I..\BSP\BSP_Switch -I..\BSP\BSP_USART1 -I..\BSP\BSP_Internet\W5500 -I..\BSP\SX1278\radio -I..\BSP\SX1278\platform\sx12xxEiger -I..\BSP\SX1278\platform -I..\BSP\apps -I..\BSP\BSP_FIFO -I..\BSP\crc -I..\BSP\ADC -I..\BSP\BSP_USART3 -I..\BSP\E31radio_driver -I..\BSP\TIMER2 -I..\BSP\BSP_USART2 -I.\RTE\_STM32F10x________2.0.0 -IE:\keil\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IE:\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\spi.crf ..\BSP\SX1278\platform\sx12xxEiger\spi.c]
                          THUMB

                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=2

                  SPI1_IRQHandler PROC
;;;90     
;;;91     void SPI1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;92     {
;;;93     	u8 buff = 0;
000002  2400              MOVS     r4,#0
;;;94     	if(SPI_I2S_GetFlagStatus(SPI1,SPI_I2S_FLAG_RXNE)==SET)
000004  2101              MOVS     r1,#1
000006  4806              LDR      r0,|L1.32|
000008  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000c  2801              CMP      r0,#1
00000e  d104              BNE      |L1.26|
;;;95     	{
;;;96     		buff= SPI_I2S_ReceiveData(SPI1);
000010  4803              LDR      r0,|L1.32|
000012  f7fffffe          BL       SPI_I2S_ReceiveData
000016  b2c4              UXTB     r4,r0
000018  e000              B        |L1.28|
                  |L1.26|
;;;97     	}
;;;98     	else buff = buff;
00001a  bf00              NOP      
                  |L1.28|
;;;99     }
00001c  bd10              POP      {r4,pc}
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      0x40013000

                          AREA ||i.SpiInOut||, CODE, READONLY, ALIGN=2

                  SpiInOut PROC
;;;82     
;;;83     uint8_t SpiInOut( uint8_t outData )
000000  b510              PUSH     {r4,lr}
;;;84     {
000002  4604              MOV      r4,r0
;;;85         /* Send SPIy data */
;;;86         SPI_I2S_SendData( SPI_INTERFACE, outData );
000004  4621              MOV      r1,r4
000006  4807              LDR      r0,|L2.36|
000008  f7fffffe          BL       SPI_I2S_SendData
;;;87         while( SPI_I2S_GetFlagStatus( SPI_INTERFACE, SPI_I2S_FLAG_RXNE ) == RESET );
00000c  bf00              NOP      
                  |L2.14|
00000e  2101              MOVS     r1,#1
000010  4804              LDR      r0,|L2.36|
000012  f7fffffe          BL       SPI_I2S_GetFlagStatus
000016  2800              CMP      r0,#0
000018  d0f9              BEQ      |L2.14|
;;;88         return SPI_I2S_ReceiveData( SPI_INTERFACE );
00001a  4802              LDR      r0,|L2.36|
00001c  f7fffffe          BL       SPI_I2S_ReceiveData
000020  b2c0              UXTB     r0,r0
;;;89     }
000022  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L2.36|
                          DCD      0x40013000

                          AREA ||i.SpiInit||, CODE, READONLY, ALIGN=2

                  SpiInit PROC
;;;40     
;;;41     void SpiInit( void )
000000  b500              PUSH     {lr}
;;;42     {
000002  b087              SUB      sp,sp,#0x1c
;;;43         SPI_InitTypeDef SPI_InitStructure;
;;;44         GPIO_InitTypeDef GPIO_InitStructure;
;;;45     
;;;46         /* Enable peripheral clocks --------------------------------------------------*/
;;;47         /* Enable SPIy clock and GPIO clock for SPIy */
;;;48         RCC_APB2PeriphClockCmd( SPI_PIN_MISO_PORT_CLK | SPI_PIN_MOSI_PORT_CLK |
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;49                                 SPI_PIN_SCK_PORT_CLK, ENABLE );
;;;50         RCC_APB2PeriphClockCmd( SPI_CLK, ENABLE );
00000c  2101              MOVS     r1,#1
00000e  0308              LSLS     r0,r1,#12
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;51     
;;;52         /* GPIO configuration ------------------------------------------------------*/
;;;53         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000014  2003              MOVS     r0,#3
000016  f88d0006          STRB     r0,[sp,#6]
;;;54         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
00001a  2018              MOVS     r0,#0x18
00001c  f88d0007          STRB     r0,[sp,#7]
;;;55     
;;;56         GPIO_InitStructure.GPIO_Pin = SPI_PIN_SCK;
000020  2020              MOVS     r0,#0x20
000022  f8ad0004          STRH     r0,[sp,#4]
;;;57         GPIO_Init( SPI_PIN_SCK_PORT, &GPIO_InitStructure );
000026  a901              ADD      r1,sp,#4
000028  481e              LDR      r0,|L3.164|
00002a  f7fffffe          BL       GPIO_Init
;;;58     
;;;59         GPIO_InitStructure.GPIO_Pin = SPI_PIN_MOSI;
00002e  2080              MOVS     r0,#0x80
000030  f8ad0004          STRH     r0,[sp,#4]
;;;60         GPIO_Init( SPI_PIN_MOSI_PORT, &GPIO_InitStructure );
000034  a901              ADD      r1,sp,#4
000036  481b              LDR      r0,|L3.164|
000038  f7fffffe          BL       GPIO_Init
;;;61     
;;;62         GPIO_InitStructure.GPIO_Pin = SPI_PIN_MISO;
00003c  2040              MOVS     r0,#0x40
00003e  f8ad0004          STRH     r0,[sp,#4]
;;;63         GPIO_Init( SPI_PIN_MISO_PORT, &GPIO_InitStructure );
000042  a901              ADD      r1,sp,#4
000044  4817              LDR      r0,|L3.164|
000046  f7fffffe          BL       GPIO_Init
;;;64     
;;;65         //½ûÓÃJTAG
;;;66     	RCC_APB2PeriphClockCmd( RCC_APB2Periph_AFIO, ENABLE );
00004a  2101              MOVS     r1,#1
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;67         GPIO_PinRemapConfig( GPIO_Remap_SWJ_JTAGDisable, ENABLE );
000052  2101              MOVS     r1,#1
000054  4814              LDR      r0,|L3.168|
000056  f7fffffe          BL       GPIO_PinRemapConfig
;;;68     
;;;69         /* SPI_INTERFACE Config -------------------------------------------------------------*/
;;;70         SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
00005a  2000              MOVS     r0,#0
00005c  f8ad0008          STRH     r0,[sp,#8]
;;;71         SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
000060  f44f7082          MOV      r0,#0x104
000064  f8ad000a          STRH     r0,[sp,#0xa]
;;;72         SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
000068  2000              MOVS     r0,#0
00006a  f8ad000c          STRH     r0,[sp,#0xc]
;;;73         SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
00006e  f8ad000e          STRH     r0,[sp,#0xe]
;;;74         SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
000072  f8ad0010          STRH     r0,[sp,#0x10]
;;;75         SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
000076  f44f7000          MOV      r0,#0x200
00007a  f8ad0012          STRH     r0,[sp,#0x12]
;;;76         SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8; // 72/8 MHz
00007e  2010              MOVS     r0,#0x10
000080  f8ad0014          STRH     r0,[sp,#0x14]
;;;77         SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
000084  2000              MOVS     r0,#0
000086  f8ad0016          STRH     r0,[sp,#0x16]
;;;78         SPI_InitStructure.SPI_CRCPolynomial = 7;
00008a  2007              MOVS     r0,#7
00008c  f8ad0018          STRH     r0,[sp,#0x18]
;;;79         SPI_Init( SPI_INTERFACE, &SPI_InitStructure );
000090  a902              ADD      r1,sp,#8
000092  4806              LDR      r0,|L3.172|
000094  f7fffffe          BL       SPI_Init
;;;80         SPI_Cmd( SPI_INTERFACE, ENABLE );
000098  2101              MOVS     r1,#1
00009a  4804              LDR      r0,|L3.172|
00009c  f7fffffe          BL       SPI_Cmd
;;;81     }
0000a0  b007              ADD      sp,sp,#0x1c
0000a2  bd00              POP      {pc}
;;;82     
                          ENDP

                  |L3.164|
                          DCD      0x40010800
                  |L3.168|
                          DCD      0x00300200
                  |L3.172|
                          DCD      0x40013000
