; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\sx12xxeiger.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\sx12xxeiger.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\J_LINK_RTT\RTT -I..\User -I..\BSP\BSP -I..\BSP\BSP_InPut -I..\BSP\BSP_OutPut -I..\BSP\BSP_FLASH -I..\BSP\BSP_USART -I..\Libraries\FreeRTOS -I..\Libraries\FreeRTOS\include -I..\Libraries\FreeRTOS\FreeRTOSConfig -I..\Libraries\FreeRTOS\portable\RVDS\ARM_CM3 -I..\BSP\OLED -I..\BSP -I..\BSP\OLED -I..\BSP\TIMER3 -I..\BSP\BSP_Switch -I..\BSP\BSP_USART1 -I..\BSP\BSP_Internet\W5500 -I..\BSP\SX1278\radio -I..\BSP\SX1278\platform\sx12xxEiger -I..\BSP\SX1278\platform -I..\BSP\apps -I..\BSP\BSP_FIFO -I..\BSP\crc -I..\BSP\ADC -I..\BSP\BSP_USART3 -I..\BSP\E31radio_driver -I..\BSP\TIMER2 -I..\BSP\BSP_USART2 -I.\RTE\_STM32F10x________2.0.0 -IE:\keil\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IE:\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\sx12xxeiger.crf ..\BSP\SX1278\platform\sx12xxEiger\sx12xxEiger.c]
                          THUMB

                          AREA ||i.BoardInit||, CODE, READONLY, ALIGN=2

                  BoardInit PROC
;;;26     
;;;27     void BoardInit( void )
000000  b530              PUSH     {r4,r5,lr}
;;;28     {
;;;29         /* Setup SysTick Timer for 1 us interrupts ( not too often to save power ) */
;;;30         if( SysTick_Config( SystemCoreClock / 1000 ) )    //1ms
000002  4816              LDR      r0,|L1.92|
000004  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000006  f44f727a          MOV      r2,#0x3e8
00000a  fbb0f1f2          UDIV     r1,r0,r2
00000e  f1b17f80          CMP      r1,#0x1000000
000012  d301              BCC      |L1.24|
000014  2001              MOVS     r0,#1
000016  e01d              B        |L1.84|
                  |L1.24|
000018  f021407f          BIC      r0,r1,#0xff000000
00001c  1e40              SUBS     r0,r0,#1
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6150              STR      r0,[r2,#0x14]
000024  1750              ASRS     r0,r2,#29
000026  220f              MOVS     r2,#0xf
000028  2800              CMP      r0,#0
00002a  da07              BGE      |L1.60|
00002c  0713              LSLS     r3,r2,#28
00002e  0e1d              LSRS     r5,r3,#24
000030  4b0b              LDR      r3,|L1.96|
000032  f000040f          AND      r4,r0,#0xf
000036  1f24              SUBS     r4,r4,#4
000038  551d              STRB     r5,[r3,r4]
00003a  e003              B        |L1.68|
                  |L1.60|
00003c  0713              LSLS     r3,r2,#28
00003e  0e1c              LSRS     r4,r3,#24
000040  4b08              LDR      r3,|L1.100|
000042  541c              STRB     r4,[r3,r0]
                  |L1.68|
000044  bf00              NOP      
000046  2000              MOVS     r0,#0
000048  f04f22e0          MOV      r2,#0xe000e000
00004c  6190              STR      r0,[r2,#0x18]
00004e  2007              MOVS     r0,#7
000050  6110              STR      r0,[r2,#0x10]
000052  2000              MOVS     r0,#0
                  |L1.84|
000054  b108              CBZ      r0,|L1.90|
;;;31         { 
;;;32             /* Capture error */ 
;;;33             while (1);
000056  bf00              NOP      
                  |L1.88|
000058  e7fe              B        |L1.88|
                  |L1.90|
;;;34         }
;;;35         // Initialize SPI
;;;36     //    SpiInit( );
;;;37     
;;;38     }
00005a  bd30              POP      {r4,r5,pc}
;;;39     
                          ENDP

                  |L1.92|
                          DCD      SystemCoreClock
                  |L1.96|
                          DCD      0xe000ed18
                  |L1.100|
                          DCD      0xe000e400

                          AREA ||i.Delay||, CODE, READONLY, ALIGN=2

                  Delay PROC
;;;39     
;;;40     void Delay ( uint32_t delay )
000000  4a04              LDR      r2,|L2.20|
;;;41     {
;;;42         // Wait delay ms
;;;43         uint32_t startTick = TickCounter;
000002  6811              LDR      r1,[r2,#0]  ; TickCounter
;;;44         while( ( TickCounter - startTick ) < delay );   
000004  bf00              NOP      
                  |L2.6|
000006  4a03              LDR      r2,|L2.20|
000008  6812              LDR      r2,[r2,#0]  ; TickCounter
00000a  1a52              SUBS     r2,r2,r1
00000c  4282              CMP      r2,r0
00000e  d3fa              BCC      |L2.6|
;;;45     }
000010  4770              BX       lr
;;;46     
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      TickCounter

                          AREA ||i.LongDelay||, CODE, READONLY, ALIGN=2

                  LongDelay PROC
;;;46     
;;;47     void LongDelay ( uint8_t delay )
000000  f44f737a          MOV      r3,#0x3e8
;;;48     {
;;;49         uint32_t longDelay;
;;;50         uint32_t startTick;
;;;51     
;;;52         longDelay = delay * 1000;
000004  fb00f103          MUL      r1,r0,r3
;;;53     
;;;54         // Wait delay s
;;;55         startTick = TickCounter;
000008  4b04              LDR      r3,|L3.28|
00000a  681a              LDR      r2,[r3,#0]  ; TickCounter
;;;56         while( ( TickCounter - startTick ) < longDelay );   
00000c  bf00              NOP      
                  |L3.14|
00000e  4b03              LDR      r3,|L3.28|
000010  681b              LDR      r3,[r3,#0]  ; TickCounter
000012  1a9b              SUBS     r3,r3,r2
000014  428b              CMP      r3,r1
000016  d3fa              BCC      |L3.14|
;;;57     }
000018  4770              BX       lr
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      TickCounter

                          AREA ||.data||, DATA, ALIGN=2

                  TickCounter
                          DCD      0x00000000
