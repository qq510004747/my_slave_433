; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\timer3.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\timer3.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\J_LINK_RTT\RTT -I..\User -I..\BSP\BSP -I..\BSP\BSP_InPut -I..\BSP\BSP_OutPut -I..\BSP\BSP_FLASH -I..\BSP\BSP_USART -I..\Libraries\FreeRTOS -I..\Libraries\FreeRTOS\include -I..\Libraries\FreeRTOS\FreeRTOSConfig -I..\Libraries\FreeRTOS\portable\RVDS\ARM_CM3 -I..\BSP\OLED -I..\BSP -I..\BSP\OLED -I..\BSP\TIMER3 -I..\BSP\BSP_Switch -I..\BSP\BSP_USART1 -I..\BSP\BSP_Internet\W5500 -I..\BSP\SX1278\radio -I..\BSP\SX1278\platform\sx12xxEiger -I..\BSP\SX1278\platform -I..\BSP\apps -I..\BSP\BSP_FIFO -I..\BSP\crc -I..\BSP\ADC -I..\BSP\BSP_USART3 -I..\BSP\E31radio_driver -I..\BSP\TIMER2 -I..\BSP\BSP_USART2 -I.\RTE\_STM32F10x________2.0.0 -IE:\keil\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IE:\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\timer3.crf ..\BSP\TIMER3\TIMER3.c]
                          THUMB

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;47     //定时器3中断服务程序
;;;48     void TIM3_IRQHandler(void)   //TIM3中断
000000  b510              PUSH     {r4,lr}
;;;49     {
;;;50     	ADC_SHOW_Flag = ADC_SHOW_Flag;
000002  48cb              LDR      r0,|L1.816|
000004  8800              LDRH     r0,[r0,#0]  ; ADC_SHOW_Flag
000006  49ca              LDR      r1,|L1.816|
000008  8008              STRH     r0,[r1,#0]
;;;51     	if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  //检查TIM3更新中断发生与否
00000a  2101              MOVS     r1,#1
00000c  48c9              LDR      r0,|L1.820|
00000e  f7fffffe          BL       TIM_GetITStatus
000012  2800              CMP      r0,#0
000014  d07e              BEQ      |L1.276|
;;;52     	{
;;;53     		TIM_ClearITPendingBit(TIM3, TIM_IT_Update);  //清除TIMx更新中断标志 
000016  2101              MOVS     r1,#1
000018  48c6              LDR      r0,|L1.820|
00001a  f7fffffe          BL       TIM_ClearITPendingBit
;;;54     //************************************************************************************************
;;;55     		if(Run_Tim3_Flag>300)
00001e  48c6              LDR      r0,|L1.824|
000020  8800              LDRH     r0,[r0,#0]  ; Run_Tim3_Flag
000022  f5b07f96          CMP      r0,#0x12c
000026  dd03              BLE      |L1.48|
;;;56     		{
;;;57     //			PCout(0) = ~ PCout(0);
;;;58     //			PCout(1) = ~ PCout(1);
;;;59     			Run_Tim3_Flag =0;
000028  2000              MOVS     r0,#0
00002a  49c3              LDR      r1,|L1.824|
00002c  8008              STRH     r0,[r1,#0]
00002e  e004              B        |L1.58|
                  |L1.48|
;;;60     		}
;;;61     		else
;;;62     		{
;;;63     			Run_Tim3_Flag ++;
000030  48c1              LDR      r0,|L1.824|
000032  8800              LDRH     r0,[r0,#0]  ; Run_Tim3_Flag
000034  1c40              ADDS     r0,r0,#1
000036  49c0              LDR      r1,|L1.824|
000038  8008              STRH     r0,[r1,#0]
                  |L1.58|
;;;64     		}
;;;65     		
;;;66     //********************************************************************************************
;;;67     		if(Run_LED_Flag>500)
00003a  48c0              LDR      r0,|L1.828|
00003c  8800              LDRH     r0,[r0,#0]  ; Run_LED_Flag
00003e  f5b07ffa          CMP      r0,#0x1f4
000042  dd06              BLE      |L1.82|
;;;68     		{ 
;;;69     			ADC_SHOW_Flag = 1;
000044  2001              MOVS     r0,#1
000046  49ba              LDR      r1,|L1.816|
000048  8008              STRH     r0,[r1,#0]
;;;70     			Run_LED_Flag =0;
00004a  2000              MOVS     r0,#0
00004c  49bb              LDR      r1,|L1.828|
00004e  8008              STRH     r0,[r1,#0]
000050  e004              B        |L1.92|
                  |L1.82|
;;;71     		}
;;;72     		else
;;;73     		{
;;;74     			Run_LED_Flag ++;
000052  48ba              LDR      r0,|L1.828|
000054  8800              LDRH     r0,[r0,#0]  ; Run_LED_Flag
000056  1c40              ADDS     r0,r0,#1
000058  49b8              LDR      r1,|L1.828|
00005a  8008              STRH     r0,[r1,#0]
                  |L1.92|
;;;75     		}
;;;76     	//本机触发判断 
;;;77     //************************************************************************************
;;;78     //		if((ch1_time >= 1000))
;;;79     //		{
;;;80     //			ch1_time =0;
;;;81     //			SWD_1 = 0;
;;;82     //			current_node.trigger_vehicle1 = 0;
;;;83     //		}
;;;84     //		else if((SWD_1 == 1)||(SW_IN_1 == 0))
;;;85     //		{
;;;86     //			ch1_time = 0;
;;;87     //			current_node.trigger_vehicle1 = 1;
;;;88     //		}
;;;89     //		else if(((ch1_time < 1000)&&(SW_IN_1 == 1)))
;;;90     //		{
;;;91     //			ch1_time ++;
;;;92     //		}
;;;93     //************************************************************************************
;;;94     		if((ch1_time >= 5000))
00005c  48b8              LDR      r0,|L1.832|
00005e  8800              LDRH     r0,[r0,#0]  ; ch1_time
000060  f2413188          MOV      r1,#0x1388
000064  4288              CMP      r0,r1
000066  db05              BLT      |L1.116|
;;;95     		{
;;;96     			ch1_time =0;
000068  2000              MOVS     r0,#0
00006a  49b5              LDR      r1,|L1.832|
00006c  8008              STRH     r0,[r1,#0]
;;;97     			current_node.trigger_vehicle1 = 0;
00006e  49b5              LDR      r1,|L1.836|
000070  72c8              STRB     r0,[r1,#0xb]
000072  e008              B        |L1.134|
                  |L1.116|
;;;98     		}
;;;99     		else if(current_node.trigger_vehicle1 == 1)
000074  48b3              LDR      r0,|L1.836|
000076  7ac0              LDRB     r0,[r0,#0xb]  ; current_node
000078  2801              CMP      r0,#1
00007a  d104              BNE      |L1.134|
;;;100    		{
;;;101    			ch1_time ++;
00007c  48b0              LDR      r0,|L1.832|
00007e  8800              LDRH     r0,[r0,#0]  ; ch1_time
000080  1c40              ADDS     r0,r0,#1
000082  49af              LDR      r1,|L1.832|
000084  8008              STRH     r0,[r1,#0]
                  |L1.134|
;;;102    		}
;;;103    		
;;;104    		if(SWD_1 == 1) 
000086  48b0              LDR      r0,|L1.840|
000088  7800              LDRB     r0,[r0,#0]  ; SWD_1
00008a  2801              CMP      r0,#1
00008c  d104              BNE      |L1.152|
;;;105    		{
;;;106    			ch1_time =0;
00008e  2000              MOVS     r0,#0
000090  49ab              LDR      r1,|L1.832|
000092  8008              STRH     r0,[r1,#0]
;;;107    			SWD_1 = 0;
000094  49ac              LDR      r1,|L1.840|
000096  7008              STRB     r0,[r1,#0]
                  |L1.152|
;;;108    		}
;;;109    //************************************************************************************
;;;110    		if((ch2_time >= 5000))
000098  48ac              LDR      r0,|L1.844|
00009a  8800              LDRH     r0,[r0,#0]  ; ch2_time
00009c  f2413188          MOV      r1,#0x1388
0000a0  4288              CMP      r0,r1
0000a2  db05              BLT      |L1.176|
;;;111    		{
;;;112    			ch2_time =0;
0000a4  2000              MOVS     r0,#0
0000a6  49a9              LDR      r1,|L1.844|
0000a8  8008              STRH     r0,[r1,#0]
;;;113    			current_node.trigger_video2 = 0;
0000aa  49a6              LDR      r1,|L1.836|
0000ac  7308              STRB     r0,[r1,#0xc]
0000ae  e008              B        |L1.194|
                  |L1.176|
;;;114    		}
;;;115    		else if(current_node.trigger_video2 == 1)
0000b0  48a4              LDR      r0,|L1.836|
0000b2  7b00              LDRB     r0,[r0,#0xc]  ; current_node
0000b4  2801              CMP      r0,#1
0000b6  d104              BNE      |L1.194|
;;;116    		{
;;;117    			ch2_time ++;
0000b8  48a4              LDR      r0,|L1.844|
0000ba  8800              LDRH     r0,[r0,#0]  ; ch2_time
0000bc  1c40              ADDS     r0,r0,#1
0000be  49a3              LDR      r1,|L1.844|
0000c0  8008              STRH     r0,[r1,#0]
                  |L1.194|
;;;118    		}
;;;119    		if(SWD_2 == 1) 
0000c2  48a3              LDR      r0,|L1.848|
0000c4  7800              LDRB     r0,[r0,#0]  ; SWD_2
0000c6  2801              CMP      r0,#1
0000c8  d104              BNE      |L1.212|
;;;120    		{
;;;121    			ch2_time =0;
0000ca  2000              MOVS     r0,#0
0000cc  499f              LDR      r1,|L1.844|
0000ce  8008              STRH     r0,[r1,#0]
;;;122    			SWD_2 = 0;
0000d0  499f              LDR      r1,|L1.848|
0000d2  7008              STRB     r0,[r1,#0]
                  |L1.212|
;;;123    		}
;;;124    //************************************************************************************
;;;125    		if((ch3_time >= 5000))
0000d4  489f              LDR      r0,|L1.852|
0000d6  8800              LDRH     r0,[r0,#0]  ; ch3_time
0000d8  f2413188          MOV      r1,#0x1388
0000dc  4288              CMP      r0,r1
0000de  db05              BLT      |L1.236|
;;;126    		{
;;;127    			ch3_time =0;
0000e0  2000              MOVS     r0,#0
0000e2  499c              LDR      r1,|L1.852|
0000e4  8008              STRH     r0,[r1,#0]
;;;128    			current_node.trigger_microwave3 = 0;
0000e6  4997              LDR      r1,|L1.836|
0000e8  7348              STRB     r0,[r1,#0xd]
0000ea  e008              B        |L1.254|
                  |L1.236|
;;;129    		}
;;;130    		else if(current_node.trigger_microwave3 == 1)
0000ec  4895              LDR      r0,|L1.836|
0000ee  7b40              LDRB     r0,[r0,#0xd]  ; current_node
0000f0  2801              CMP      r0,#1
0000f2  d104              BNE      |L1.254|
;;;131    		{
;;;132    			ch3_time ++;
0000f4  4897              LDR      r0,|L1.852|
0000f6  8800              LDRH     r0,[r0,#0]  ; ch3_time
0000f8  1c40              ADDS     r0,r0,#1
0000fa  4996              LDR      r1,|L1.852|
0000fc  8008              STRH     r0,[r1,#0]
                  |L1.254|
;;;133    		}
;;;134    		if(SWD_3 == 1) 
0000fe  4896              LDR      r0,|L1.856|
000100  7800              LDRB     r0,[r0,#0]  ; SWD_3
000102  2801              CMP      r0,#1
000104  d104              BNE      |L1.272|
;;;135    		{
;;;136    			ch3_time =0;
000106  2000              MOVS     r0,#0
000108  4992              LDR      r1,|L1.852|
00010a  8008              STRH     r0,[r1,#0]
;;;137    			SWD_3 = 0;
00010c  4992              LDR      r1,|L1.856|
00010e  7008              STRB     r0,[r1,#0]
                  |L1.272|
;;;138    		}
;;;139    //************************************************************************************
;;;140    		if((ch4_time >= 5000))
000110  4892              LDR      r0,|L1.860|
000112  e000              B        |L1.278|
                  |L1.276|
000114  e10b              B        |L1.814|
                  |L1.278|
000116  8800              LDRH     r0,[r0,#0]  ; ch4_time
000118  f2413188          MOV      r1,#0x1388
00011c  4288              CMP      r0,r1
00011e  db05              BLT      |L1.300|
;;;141    		{
;;;142    			ch4_time =0;
000120  2000              MOVS     r0,#0
000122  498e              LDR      r1,|L1.860|
000124  8008              STRH     r0,[r1,#0]
;;;143    			current_node.trigger_reserve1 = 0;
000126  4987              LDR      r1,|L1.836|
000128  7388              STRB     r0,[r1,#0xe]
00012a  e008              B        |L1.318|
                  |L1.300|
;;;144    		}
;;;145    		else if(current_node.trigger_reserve1 == 1)
00012c  4885              LDR      r0,|L1.836|
00012e  7b80              LDRB     r0,[r0,#0xe]  ; current_node
000130  2801              CMP      r0,#1
000132  d104              BNE      |L1.318|
;;;146    		{
;;;147    			ch4_time ++;
000134  4889              LDR      r0,|L1.860|
000136  8800              LDRH     r0,[r0,#0]  ; ch4_time
000138  1c40              ADDS     r0,r0,#1
00013a  4988              LDR      r1,|L1.860|
00013c  8008              STRH     r0,[r1,#0]
                  |L1.318|
;;;148    		}
;;;149    		if(SWD_4 == 1) 
00013e  4888              LDR      r0,|L1.864|
000140  7800              LDRB     r0,[r0,#0]  ; SWD_4
000142  2801              CMP      r0,#1
000144  d104              BNE      |L1.336|
;;;150    		{
;;;151    			ch4_time =0;
000146  2000              MOVS     r0,#0
000148  4984              LDR      r1,|L1.860|
00014a  8008              STRH     r0,[r1,#0]
;;;152    			SWD_4 = 0;
00014c  4984              LDR      r1,|L1.864|
00014e  7008              STRB     r0,[r1,#0]
                  |L1.336|
;;;153    		}
;;;154    
;;;155    //************************************************************************************
;;;156    //		if((ch2_time >= 30000))
;;;157    //		{
;;;158    //			ch2_time =0;
;;;159    //			SWD_2 = 0;
;;;160    //			current_node.trigger_video2 = 0;
;;;161    //		}
;;;162    //		else if((ch2_time < 30000)&&(current_node.trigger_video2 == 1))
;;;163    //		{
;;;164    //			current_node.trigger_video2 = 1;
;;;165    //			SWD_2 = 0;
;;;166    //			ch2_time = 0;
;;;167    //			ch2_time ++;
;;;168    //		}
;;;169    //		else if((ch2_time < 30000)&&(current_node.trigger_video2 == 1))
;;;170    //		{
;;;171    //			ch2_time ++;
;;;172    //		}
;;;173    ////************************************************************************************
;;;174    //		if((ch3_time >= 30000))
;;;175    //		{
;;;176    //			ch3_time =0;
;;;177    //			SWD_3 = 0;
;;;178    //			current_node.trigger_microwave3 = 0;
;;;179    //		}
;;;180    //		else if((ch3_time < 30000)&&(current_node.trigger_microwave3 == 1))
;;;181    //		{
;;;182    //			current_node.trigger_microwave3 = 1;
;;;183    //			SWD_3 = 0;
;;;184    //			ch3_time = 0;
;;;185    //			ch3_time ++;
;;;186    //		}
;;;187    //		else if((ch3_time < 30000)&&(current_node.trigger_microwave3 == 1))
;;;188    //		{
;;;189    //			ch3_time ++;
;;;190    //		}
;;;191    ////*************************************************************************************
;;;192    //		if((ch4_time >= 30000))
;;;193    //		{
;;;194    //			ch4_time =0;
;;;195    //			SWD_4 = 0;
;;;196    //			current_node.trigger_reserve1 = 0;
;;;197    //		}
;;;198    //		else if((ch4_time < 30000)&&(current_node.trigger_reserve1 == 1))
;;;199    //		{
;;;200    //			current_node.trigger_reserve1 = 1;
;;;201    //			SWD_4 = 0;
;;;202    //			ch4_time = 0;
;;;203    //			ch4_time ++;
;;;204    //		}
;;;205    //		else if((ch4_time < 30000)&&(current_node.trigger_reserve1 == 1))
;;;206    //		{
;;;207    //			ch4_time ++;
;;;208    //		}
;;;209    		//输出
;;;210    //uint16_t km1_time = 0;
;;;211    //uint16_t km2_time = 0;
;;;212    //uint16_t km3_time = 0;
;;;213    //uint16_t km4_time = 0;
;;;214    //uint16_t km5_time = 0;
;;;215    //uint16_t km6_time = 0;
;;;216    //uint16_t km7_time = 0;
;;;217    //uint16_t km8_time = 0;
;;;218    //*************************************************************************************
;;;219    //		if(km1_time >= 30000)//(&&(current_node.spikelamp_switch1 == 1))
;;;220    //		{
;;;221    //			km1_time =0;
;;;222    //			KM_1 = 0;
;;;223    //			current_node.spikelamp_switch1 = 0;
;;;224    //		}
;;;225    //		else if((km1_time < 30000)&&(current_node.spikelamp_switch1 == 1))
;;;226    //		{
;;;227    //			KM_1 = 1;
;;;228    //			current_node.spikelamp_switch1 = 0;
;;;229    //			km1_time = 0;
;;;230    //			km1_time ++;
;;;231    //		}
;;;232    //		else if((km1_time < 30000)&&(current_node.spikelamp_switch1 == 0))
;;;233    //		{
;;;234    //			KM_1 = 1;
;;;235    //			ch4_time ++;
;;;236    //		}
;;;237    ////*************************************************************************************
;;;238    //		if(km2_time >= 30000)//(&&(current_node.spikelamp_switch1 == 1))
;;;239    //		{
;;;240    //			km2_time =0;
;;;241    //			KM_2 = 0;
;;;242    //			current_node.voice_switch2 = 0;
;;;243    //		}
;;;244    //		else if((km2_time < 30000)&&(current_node.voice_switch2 == 1))
;;;245    //		{
;;;246    //			KM_2 = 1;
;;;247    //			current_node.voice_switch2 = 0;
;;;248    //			km2_time = 0;
;;;249    //			km2_time ++;
;;;250    //		}
;;;251    //		else if((km2_time < 30000)&&(current_node.voice_switch2 == 0))
;;;252    //		{
;;;253    //			KM_2 = 1;
;;;254    //			km2_time ++;
;;;255    //		}
;;;256    ////*************************************************************************************	
;;;257    //		if(km3_time >= 30000)//(&&(current_node.led_switch3 == 1))
;;;258    //		{
;;;259    //			km3_time =0;
;;;260    //			KM_3 = 0;
;;;261    //			current_node.led_switch3 = 0;
;;;262    //		}
;;;263    //		else if((km3_time < 30000)&&(current_node.led_switch3 == 1))
;;;264    //		{
;;;265    //			KM_3 = 1;
;;;266    //			current_node.led_switch3 = 0;
;;;267    //			km3_time = 0;
;;;268    //			km3_time ++;
;;;269    //		}
;;;270    //		else if((km3_time < 30000)&&(current_node.led_switch3 == 0))
;;;271    //		{
;;;272    //			KM_3 = 1;
;;;273    //			km3_time ++;
;;;274    //		}
;;;275    ////*************************************************************************************	
;;;276    //		if(km4_time >= 30000)//(&&(current_node.reserve1_switch == 1))
;;;277    //		{
;;;278    //			km4_time =0;
;;;279    //			KM_4 = 0;
;;;280    //			current_node.reserve1_switch = 0;
;;;281    //		}
;;;282    //		else if((km4_time < 30000)&&(current_node.reserve1_switch == 1))
;;;283    //		{
;;;284    //			KM_4 = 1;
;;;285    //			current_node.reserve1_switch = 0;
;;;286    //			km4_time = 0;
;;;287    //			km4_time ++;
;;;288    //		}
;;;289    //		else if((km4_time < 30000)&&(current_node.reserve1_switch == 0))
;;;290    //		{
;;;291    //			KM_4 = 1;
;;;292    //			km4_time ++;
;;;293    //		}
;;;294    ////*************************************************************************************	
;;;295    //		if(km5_time >= 30000)//(&&(current_node.reserve1_switch == 1))
;;;296    //		{
;;;297    //			km5_time =0;
;;;298    //			KM_5 = 0;
;;;299    //			current_node.reserve1_switch = 0;
;;;300    //		}
;;;301    //		else if((km5_time < 30000)&&(current_node.reserve2_switch == 1))
;;;302    //		{
;;;303    //			KM_5 = 1;
;;;304    //			current_node.reserve2_switch = 0;
;;;305    //			km5_time = 0;
;;;306    //			km5_time ++;
;;;307    //		}
;;;308    //		else if((km5_time < 30000)&&(current_node.reserve2_switch == 0))
;;;309    //		{
;;;310    //			KM_5 = 1;
;;;311    //			km5_time ++;
;;;312    //		}
;;;313    ////*************************************************************************************	
;;;314    //		if(km6_time >= 30000)//(&&(current_node.reserve1_switch == 1))
;;;315    //		{
;;;316    //			km6_time =0;
;;;317    //			KM_6 = 0;
;;;318    //			current_node.reserve3_switch = 0;
;;;319    //		}
;;;320    //		else if((km6_time < 30000)&&(current_node.reserve3_switch == 1))
;;;321    //		{
;;;322    //			KM_6 = 1;
;;;323    //			current_node.reserve1_switch = 0;
;;;324    //			km6_time = 0;
;;;325    //			km6_time ++;
;;;326    //		}
;;;327    //		else if((km6_time < 30000)&&(current_node.reserve3_switch == 0))
;;;328    //		{
;;;329    //			KM_6 = 1;
;;;330    //			km6_time ++;
;;;331    //		}
;;;332    ////*************************************************************************************	
;;;333    //		if(KM_spikelamp_switch1 == 1) 
;;;334    //		{
;;;335    //			KM_1 = 0;
;;;336    //			km1_time =0;
;;;337    //			KM_spikelamp_switch1 = 0;
;;;338    //		}
;;;339    		if((km1_time >= KM_OPEN_DURATION_TIME))
000150  4884              LDR      r0,|L1.868|
000152  8800              LDRH     r0,[r0,#0]  ; km1_time
000154  f2413188          MOV      r1,#0x1388
000158  4288              CMP      r0,r1
00015a  db06              BLT      |L1.362|
;;;340    		{
;;;341    			KM_1 = 1;
00015c  2001              MOVS     r0,#1
00015e  4982              LDR      r1,|L1.872|
000160  6008              STR      r0,[r1,#0]
;;;342    			km1_time =0;
000162  2000              MOVS     r0,#0
000164  497f              LDR      r1,|L1.868|
000166  8008              STRH     r0,[r1,#0]
000168  e007              B        |L1.378|
                  |L1.362|
;;;343    		}
;;;344    		else if(KM_1 == 0)
00016a  487f              LDR      r0,|L1.872|
00016c  6800              LDR      r0,[r0,#0]
00016e  b920              CBNZ     r0,|L1.378|
;;;345    		{
;;;346    			km1_time ++;
000170  487c              LDR      r0,|L1.868|
000172  8800              LDRH     r0,[r0,#0]  ; km1_time
000174  1c40              ADDS     r0,r0,#1
000176  497b              LDR      r1,|L1.868|
000178  8008              STRH     r0,[r1,#0]
                  |L1.378|
;;;347    		}
;;;348    		if(current_node.spikelamp_switch1 == 1)
00017a  4872              LDR      r0,|L1.836|
00017c  7bc0              LDRB     r0,[r0,#0xf]  ; current_node
00017e  2801              CMP      r0,#1
000180  d102              BNE      |L1.392|
;;;349    		{
;;;350    			km1_time = 0;
000182  2000              MOVS     r0,#0
000184  4977              LDR      r1,|L1.868|
000186  8008              STRH     r0,[r1,#0]
                  |L1.392|
;;;351    		}
;;;352    //		printf("KM_1 %d:  \n",(uint8_t)KM_1);
;;;353    //		printf("current_node.spikelamp_switch1 %d:  \n",(uint8_t)current_node.spikelamp_switch1);
;;;354    //		printf("km1_time %d:  \n",(uint8_t)km1_time);		
;;;355    //*************************************************************************************		
;;;356    //		if(KM_voice_switch2 == 1) 
;;;357    //		{
;;;358    //			KM_2 = 0;
;;;359    //			km2_time =0;
;;;360    //			KM_voice_switch2 = 0;
;;;361    //		}
;;;362    		if((km2_time >= KM_OPEN_DURATION_TIME))
000188  4878              LDR      r0,|L1.876|
00018a  8800              LDRH     r0,[r0,#0]  ; km2_time
00018c  f2413188          MOV      r1,#0x1388
000190  4288              CMP      r0,r1
000192  db07              BLT      |L1.420|
;;;363    		{
;;;364    			KM_2 = 1;
000194  2001              MOVS     r0,#1
000196  4974              LDR      r1,|L1.872|
000198  1f09              SUBS     r1,r1,#4
00019a  6008              STR      r0,[r1,#0]
;;;365    			km2_time =0;
00019c  2000              MOVS     r0,#0
00019e  4973              LDR      r1,|L1.876|
0001a0  8008              STRH     r0,[r1,#0]
0001a2  e009              B        |L1.440|
                  |L1.420|
;;;366    		}
;;;367    		else if((uint8_t)KM_2 == 0)
0001a4  4870              LDR      r0,|L1.872|
0001a6  1f00              SUBS     r0,r0,#4
0001a8  6800              LDR      r0,[r0,#0]
0001aa  b2c0              UXTB     r0,r0
0001ac  b920              CBNZ     r0,|L1.440|
;;;368    		{
;;;369    			km2_time ++;
0001ae  486f              LDR      r0,|L1.876|
0001b0  8800              LDRH     r0,[r0,#0]  ; km2_time
0001b2  1c40              ADDS     r0,r0,#1
0001b4  496d              LDR      r1,|L1.876|
0001b6  8008              STRH     r0,[r1,#0]
                  |L1.440|
;;;370    		}
;;;371    		if(current_node.voice_switch2 == 1)
0001b8  4862              LDR      r0,|L1.836|
0001ba  7c00              LDRB     r0,[r0,#0x10]  ; current_node
0001bc  2801              CMP      r0,#1
0001be  d102              BNE      |L1.454|
;;;372    		{
;;;373    			km2_time = 0;
0001c0  2000              MOVS     r0,#0
0001c2  496a              LDR      r1,|L1.876|
0001c4  8008              STRH     r0,[r1,#0]
                  |L1.454|
;;;374    		}
;;;375    //*************************************************************************************	
;;;376    		if((km3_time >= KM_OPEN_DURATION_TIME))
0001c6  486a              LDR      r0,|L1.880|
0001c8  8800              LDRH     r0,[r0,#0]  ; km3_time
0001ca  f2413188          MOV      r1,#0x1388
0001ce  4288              CMP      r0,r1
0001d0  db07              BLT      |L1.482|
;;;377    		{
;;;378    			KM_3 = 1;
0001d2  2001              MOVS     r0,#1
0001d4  4964              LDR      r1,|L1.872|
0001d6  3908              SUBS     r1,r1,#8
0001d8  6008              STR      r0,[r1,#0]
;;;379    			km3_time =0;
0001da  2000              MOVS     r0,#0
0001dc  4964              LDR      r1,|L1.880|
0001de  8008              STRH     r0,[r1,#0]
0001e0  e009              B        |L1.502|
                  |L1.482|
;;;380    		}
;;;381    		else if((uint8_t)KM_3 == 0)
0001e2  4861              LDR      r0,|L1.872|
0001e4  3808              SUBS     r0,r0,#8
0001e6  6800              LDR      r0,[r0,#0]
0001e8  b2c0              UXTB     r0,r0
0001ea  b920              CBNZ     r0,|L1.502|
;;;382    		{
;;;383    			km3_time ++;
0001ec  4860              LDR      r0,|L1.880|
0001ee  8800              LDRH     r0,[r0,#0]  ; km3_time
0001f0  1c40              ADDS     r0,r0,#1
0001f2  495f              LDR      r1,|L1.880|
0001f4  8008              STRH     r0,[r1,#0]
                  |L1.502|
;;;384    		}
;;;385    		if(current_node.led_switch3 == 1)
0001f6  4853              LDR      r0,|L1.836|
0001f8  7c40              LDRB     r0,[r0,#0x11]  ; current_node
0001fa  2801              CMP      r0,#1
0001fc  d102              BNE      |L1.516|
;;;386    		{
;;;387    			km3_time = 0;
0001fe  2000              MOVS     r0,#0
000200  495b              LDR      r1,|L1.880|
000202  8008              STRH     r0,[r1,#0]
                  |L1.516|
;;;388    		}
;;;389    //*************************************************************************************	
;;;390    		if((km4_time >= KM_OPEN_DURATION_TIME))
000204  485b              LDR      r0,|L1.884|
000206  8800              LDRH     r0,[r0,#0]  ; km4_time
000208  f2413188          MOV      r1,#0x1388
00020c  4288              CMP      r0,r1
00020e  db06              BLT      |L1.542|
;;;391    		{
;;;392    			KM_4 = 1;
000210  2001              MOVS     r0,#1
000212  4959              LDR      r1,|L1.888|
000214  6008              STR      r0,[r1,#0]
;;;393    			km4_time =0;
000216  2000              MOVS     r0,#0
000218  4956              LDR      r1,|L1.884|
00021a  8008              STRH     r0,[r1,#0]
00021c  e008              B        |L1.560|
                  |L1.542|
;;;394    		}
;;;395    		else if((uint8_t)KM_4 == 0)
00021e  4856              LDR      r0,|L1.888|
000220  6800              LDR      r0,[r0,#0]
000222  b2c0              UXTB     r0,r0
000224  b920              CBNZ     r0,|L1.560|
;;;396    		{
;;;397    			km4_time ++;
000226  4853              LDR      r0,|L1.884|
000228  8800              LDRH     r0,[r0,#0]  ; km4_time
00022a  1c40              ADDS     r0,r0,#1
00022c  4951              LDR      r1,|L1.884|
00022e  8008              STRH     r0,[r1,#0]
                  |L1.560|
;;;398    		}
;;;399    		if(current_node.reserve1_switch == 1)
000230  4844              LDR      r0,|L1.836|
000232  7c80              LDRB     r0,[r0,#0x12]  ; current_node
000234  2801              CMP      r0,#1
000236  d102              BNE      |L1.574|
;;;400    		{
;;;401    			km4_time = 0;
000238  2000              MOVS     r0,#0
00023a  494e              LDR      r1,|L1.884|
00023c  8008              STRH     r0,[r1,#0]
                  |L1.574|
;;;402    		}
;;;403    //*************************************************************************************	
;;;404    		if((km5_time >= KM_OPEN_DURATION_TIME))
00023e  484f              LDR      r0,|L1.892|
000240  8800              LDRH     r0,[r0,#0]  ; km5_time
000242  f2413188          MOV      r1,#0x1388
000246  4288              CMP      r0,r1
000248  db06              BLT      |L1.600|
;;;405    		{
;;;406    			KM_5 = 1;
00024a  2001              MOVS     r0,#1
00024c  494c              LDR      r1,|L1.896|
00024e  6008              STR      r0,[r1,#0]
;;;407    			km5_time =0;
000250  2000              MOVS     r0,#0
000252  494a              LDR      r1,|L1.892|
000254  8008              STRH     r0,[r1,#0]
000256  e008              B        |L1.618|
                  |L1.600|
;;;408    		}
;;;409    		else if((uint8_t)KM_5 == 0)
000258  4849              LDR      r0,|L1.896|
00025a  6800              LDR      r0,[r0,#0]
00025c  b2c0              UXTB     r0,r0
00025e  b920              CBNZ     r0,|L1.618|
;;;410    		{
;;;411    			km5_time ++;
000260  4846              LDR      r0,|L1.892|
000262  8800              LDRH     r0,[r0,#0]  ; km5_time
000264  1c40              ADDS     r0,r0,#1
000266  4945              LDR      r1,|L1.892|
000268  8008              STRH     r0,[r1,#0]
                  |L1.618|
;;;412    		}
;;;413    		if(current_node.reserve2_switch == 1)
00026a  4836              LDR      r0,|L1.836|
00026c  7cc0              LDRB     r0,[r0,#0x13]  ; current_node
00026e  2801              CMP      r0,#1
000270  d102              BNE      |L1.632|
;;;414    		{
;;;415    			km5_time = 0;
000272  2000              MOVS     r0,#0
000274  4941              LDR      r1,|L1.892|
000276  8008              STRH     r0,[r1,#0]
                  |L1.632|
;;;416    		}
;;;417    //*************************************************************************************	
;;;418    		if((km6_time >= KM_OPEN_DURATION_TIME))
000278  4842              LDR      r0,|L1.900|
00027a  8800              LDRH     r0,[r0,#0]  ; km6_time
00027c  f2413188          MOV      r1,#0x1388
000280  4288              CMP      r0,r1
000282  db07              BLT      |L1.660|
;;;419    		{
;;;420    			KM_6 = 1;
000284  2001              MOVS     r0,#1
000286  493e              LDR      r1,|L1.896|
000288  1f09              SUBS     r1,r1,#4
00028a  6008              STR      r0,[r1,#0]
;;;421    			km6_time =0;
00028c  2000              MOVS     r0,#0
00028e  493d              LDR      r1,|L1.900|
000290  8008              STRH     r0,[r1,#0]
000292  e009              B        |L1.680|
                  |L1.660|
;;;422    		}
;;;423    		else if((uint8_t)KM_6 == 0)
000294  483a              LDR      r0,|L1.896|
000296  1f00              SUBS     r0,r0,#4
000298  6800              LDR      r0,[r0,#0]
00029a  b2c0              UXTB     r0,r0
00029c  b920              CBNZ     r0,|L1.680|
;;;424    		{
;;;425    			km6_time ++;
00029e  4839              LDR      r0,|L1.900|
0002a0  8800              LDRH     r0,[r0,#0]  ; km6_time
0002a2  1c40              ADDS     r0,r0,#1
0002a4  4937              LDR      r1,|L1.900|
0002a6  8008              STRH     r0,[r1,#0]
                  |L1.680|
;;;426    		}
;;;427    		if(current_node.reserve3_switch == 1)
0002a8  4826              LDR      r0,|L1.836|
0002aa  7d00              LDRB     r0,[r0,#0x14]  ; current_node
0002ac  2801              CMP      r0,#1
0002ae  d102              BNE      |L1.694|
;;;428    		{
;;;429    			km6_time = 0;
0002b0  2000              MOVS     r0,#0
0002b2  4934              LDR      r1,|L1.900|
0002b4  8008              STRH     r0,[r1,#0]
                  |L1.694|
;;;430    		}
;;;431    		
;;;432    
;;;433    //*************************************************************************************			
;;;434    		if(Bad_Cnt_Tim3_Flag>1000)
0002b6  4834              LDR      r0,|L1.904|
0002b8  8800              LDRH     r0,[r0,#0]  ; Bad_Cnt_Tim3_Flag
0002ba  f5b07f7a          CMP      r0,#0x3e8
0002be  dd10              BLE      |L1.738|
;;;435    		{
;;;436    			if(current_node.bad_cnt>254)
0002c0  4820              LDR      r0,|L1.836|
0002c2  7880              LDRB     r0,[r0,#2]  ; current_node
0002c4  28fe              CMP      r0,#0xfe
0002c6  dd03              BLE      |L1.720|
;;;437    			{
;;;438    				current_node.bad_cnt = 254;
0002c8  20fe              MOVS     r0,#0xfe
0002ca  491e              LDR      r1,|L1.836|
0002cc  7088              STRB     r0,[r1,#2]
0002ce  e00d              B        |L1.748|
                  |L1.720|
;;;439    			}
;;;440    				
;;;441    			else
;;;442    			{
;;;443    				current_node.bad_cnt++;
0002d0  481c              LDR      r0,|L1.836|
0002d2  7880              LDRB     r0,[r0,#2]  ; current_node
0002d4  1c40              ADDS     r0,r0,#1
0002d6  491b              LDR      r1,|L1.836|
0002d8  7088              STRB     r0,[r1,#2]
;;;444    				Bad_Cnt_Tim3_Flag =0;
0002da  2000              MOVS     r0,#0
0002dc  492a              LDR      r1,|L1.904|
0002de  8008              STRH     r0,[r1,#0]
0002e0  e004              B        |L1.748|
                  |L1.738|
;;;445    			}
;;;446    			
;;;447    		}
;;;448    		else
;;;449    		{
;;;450    			Bad_Cnt_Tim3_Flag ++;
0002e2  4829              LDR      r0,|L1.904|
0002e4  8800              LDRH     r0,[r0,#0]  ; Bad_Cnt_Tim3_Flag
0002e6  1c40              ADDS     r0,r0,#1
0002e8  4927              LDR      r1,|L1.904|
0002ea  8008              STRH     r0,[r1,#0]
                  |L1.748|
;;;451    		}
;;;452    //**************************************************************************************
;;;453    		
;;;454    		
;;;455    		if((timer3SysRunTime > LED_Lingt_Flash_Timer)&&(LED_Lingt_Flash_Faster))
0002ec  4827              LDR      r0,|L1.908|
0002ee  8800              LDRH     r0,[r0,#0]  ; LED_Lingt_Flash_Timer
0002f0  2100              MOVS     r1,#0
0002f2  4a27              LDR      r2,|L1.912|
0002f4  e9d23200          LDRD     r3,r2,[r2,#0]
0002f8  1ac0              SUBS     r0,r0,r3
0002fa  4191              SBCS     r1,r1,r2
0002fc  d20e              BCS      |L1.796|
0002fe  4825              LDR      r0,|L1.916|
000300  7800              LDRB     r0,[r0,#0]  ; LED_Lingt_Flash_Faster
000302  b158              CBZ      r0,|L1.796|
;;;456    		{
;;;457    			timer3SysRunTime = 0;
000304  2100              MOVS     r1,#0
000306  4a22              LDR      r2,|L1.912|
000308  6011              STR      r1,[r2,#0]  ; timer3SysRunTime
00030a  6051              STR      r1,[r2,#4]  ; timer3SysRunTime
;;;458    			KM_7 =~ KM_7;
00030c  481c              LDR      r0,|L1.896|
00030e  3808              SUBS     r0,r0,#8
000310  6800              LDR      r0,[r0,#0]
000312  43c0              MVNS     r0,r0
000314  4920              LDR      r1,|L1.920|
000316  f8c101a8          STR      r0,[r1,#0x1a8]
00031a  e008              B        |L1.814|
                  |L1.796|
;;;459    		}
;;;460    		else
;;;461    		{
;;;462    			timer3SysRunTime++;
00031c  481c              LDR      r0,|L1.912|
00031e  e9d02000          LDRD     r2,r0,[r0,#0]
000322  1c52              ADDS     r2,r2,#1
000324  f1400000          ADC      r0,r0,#0
000328  4919              LDR      r1,|L1.912|
00032a  e9c12000          STRD     r2,r0,[r1,#0]
                  |L1.814|
;;;463    		} 
;;;464    //**************************************************************************************
;;;465    	}
;;;466    }
00032e  bd10              POP      {r4,pc}
;;;467    
                          ENDP

                  |L1.816|
                          DCD      ADC_SHOW_Flag
                  |L1.820|
                          DCD      0x40000400
                  |L1.824|
                          DCD      Run_Tim3_Flag
                  |L1.828|
                          DCD      Run_LED_Flag
                  |L1.832|
                          DCD      ch1_time
                  |L1.836|
                          DCD      current_node
                  |L1.840|
                          DCD      SWD_1
                  |L1.844|
                          DCD      ch2_time
                  |L1.848|
                          DCD      SWD_2
                  |L1.852|
                          DCD      ch3_time
                  |L1.856|
                          DCD      SWD_3
                  |L1.860|
                          DCD      ch4_time
                  |L1.864|
                          DCD      SWD_4
                  |L1.868|
                          DCD      km1_time
                  |L1.872|
                          DCD      0x42218194
                  |L1.876|
                          DCD      km2_time
                  |L1.880|
                          DCD      km3_time
                  |L1.884|
                          DCD      km4_time
                  |L1.888|
                          DCD      0x42228188
                  |L1.892|
                          DCD      km5_time
                  |L1.896|
                          DCD      0x422201b0
                  |L1.900|
                          DCD      km6_time
                  |L1.904|
                          DCD      Bad_Cnt_Tim3_Flag
                  |L1.908|
                          DCD      LED_Lingt_Flash_Timer
                  |L1.912|
                          DCD      timer3SysRunTime
                  |L1.916|
                          DCD      LED_Lingt_Flash_Faster
                  |L1.920|
                          DCD      0x42220000

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;21     #define KM_OPEN_DURATION_TIME 5000
;;;22     void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;23     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;24         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;25     	NVIC_InitTypeDef NVIC_InitStructure;
;;;26     
;;;27     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;28     
;;;29     	//定时器TIM3初始化
;;;30     	TIM_TimeBaseStructure.TIM_Period = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	
00000e  f8ad5008          STRH     r5,[sp,#8]
;;;31     	TIM_TimeBaseStructure.TIM_Prescaler =psc; //设置用来作为TIMx时钟频率除数的预分频值
000012  f8ad4004          STRH     r4,[sp,#4]
;;;32     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
000016  2000              MOVS     r0,#0
000018  f8ad000a          STRH     r0,[sp,#0xa]
;;;33     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
00001c  f8ad0006          STRH     r0,[sp,#6]
;;;34     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位
000020  a901              ADD      r1,sp,#4
000022  480e              LDR      r0,|L2.92|
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;35      
;;;36     	TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE); //使能指定的TIM3中断,允许更新中断
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  480b              LDR      r0,|L2.92|
00002e  f7fffffe          BL       TIM_ITConfig
;;;37     	
;;;38     	//中断优先级NVIC设置
;;;39     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断
000032  201d              MOVS     r0,#0x1d
000034  f88d0000          STRB     r0,[sp,#0]
;;;40     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  //先占优先级0级
000038  2000              MOVS     r0,#0
00003a  f88d0001          STRB     r0,[sp,#1]
;;;41     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 4;  //从优先级4级
00003e  2004              MOVS     r0,#4
000040  f88d0002          STRB     r0,[sp,#2]
;;;42     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能
000044  2001              MOVS     r0,#1
000046  f88d0003          STRB     r0,[sp,#3]
;;;43     	NVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       NVIC_Init
;;;44     
;;;45     	TIM_Cmd(TIM3, ENABLE);  //使能TIMx					 
000050  2101              MOVS     r1,#1
000052  4802              LDR      r0,|L2.92|
000054  f7fffffe          BL       TIM_Cmd
;;;46     	}
000058  bd7f              POP      {r0-r6,pc}
;;;47     //定时器3中断服务程序
                          ENDP

00005a  0000              DCW      0x0000
                  |L2.92|
                          DCD      0x40000400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Buffer
                          %        30

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  crc16Tab
000000  00001021          DCW      0x0000,0x1021
000004  20423063          DCW      0x2042,0x3063
000008  408450a5          DCW      0x4084,0x50a5
00000c  60c670e7          DCW      0x60c6,0x70e7
000010  81089129          DCW      0x8108,0x9129
000014  a14ab16b          DCW      0xa14a,0xb16b
000018  c18cd1ad          DCW      0xc18c,0xd1ad
00001c  e1cef1ef          DCW      0xe1ce,0xf1ef
000020  12310210          DCW      0x1231,0x0210
000024  32732252          DCW      0x3273,0x2252
000028  52b54294          DCW      0x52b5,0x4294
00002c  72f762d6          DCW      0x72f7,0x62d6
000030  93398318          DCW      0x9339,0x8318
000034  b37ba35a          DCW      0xb37b,0xa35a
000038  d3bdc39c          DCW      0xd3bd,0xc39c
00003c  f3ffe3de          DCW      0xf3ff,0xe3de
000040  24623443          DCW      0x2462,0x3443
000044  04201401          DCW      0x0420,0x1401
000048  64e674c7          DCW      0x64e6,0x74c7
00004c  44a45485          DCW      0x44a4,0x5485
000050  a56ab54b          DCW      0xa56a,0xb54b
000054  85289509          DCW      0x8528,0x9509
000058  e5eef5cf          DCW      0xe5ee,0xf5cf
00005c  c5acd58d          DCW      0xc5ac,0xd58d
000060  36532672          DCW      0x3653,0x2672
000064  16110630          DCW      0x1611,0x0630
000068  76d766f6          DCW      0x76d7,0x66f6
00006c  569546b4          DCW      0x5695,0x46b4
000070  b75ba77a          DCW      0xb75b,0xa77a
000074  97198738          DCW      0x9719,0x8738
000078  f7dfe7fe          DCW      0xf7df,0xe7fe
00007c  d79dc7bc          DCW      0xd79d,0xc7bc
000080  48c458e5          DCW      0x48c4,0x58e5
000084  688678a7          DCW      0x6886,0x78a7
000088  08401861          DCW      0x0840,0x1861
00008c  28023823          DCW      0x2802,0x3823
000090  c9ccd9ed          DCW      0xc9cc,0xd9ed
000094  e98ef9af          DCW      0xe98e,0xf9af
000098  89489969          DCW      0x8948,0x9969
00009c  a90ab92b          DCW      0xa90a,0xb92b
0000a0  5af54ad4          DCW      0x5af5,0x4ad4
0000a4  7ab76a96          DCW      0x7ab7,0x6a96
0000a8  1a710a50          DCW      0x1a71,0x0a50
0000ac  3a332a12          DCW      0x3a33,0x2a12
0000b0  dbfdcbdc          DCW      0xdbfd,0xcbdc
0000b4  fbbfeb9e          DCW      0xfbbf,0xeb9e
0000b8  9b798b58          DCW      0x9b79,0x8b58
0000bc  bb3bab1a          DCW      0xbb3b,0xab1a
0000c0  6ca67c87          DCW      0x6ca6,0x7c87
0000c4  4ce45cc5          DCW      0x4ce4,0x5cc5
0000c8  2c223c03          DCW      0x2c22,0x3c03
0000cc  0c601c41          DCW      0x0c60,0x1c41
0000d0  edaefd8f          DCW      0xedae,0xfd8f
0000d4  cdecddcd          DCW      0xcdec,0xddcd
0000d8  ad2abd0b          DCW      0xad2a,0xbd0b
0000dc  8d689d49          DCW      0x8d68,0x9d49
0000e0  7e976eb6          DCW      0x7e97,0x6eb6
0000e4  5ed54ef4          DCW      0x5ed5,0x4ef4
0000e8  3e132e32          DCW      0x3e13,0x2e32
0000ec  1e510e70          DCW      0x1e51,0x0e70
0000f0  ff9fefbe          DCW      0xff9f,0xefbe
0000f4  dfddcffc          DCW      0xdfdd,0xcffc
0000f8  bf1baf3a          DCW      0xbf1b,0xaf3a
0000fc  9f598f78          DCW      0x9f59,0x8f78
000100  918881a9          DCW      0x9188,0x81a9
000104  b1caa1eb          DCW      0xb1ca,0xa1eb
000108  d10cc12d          DCW      0xd10c,0xc12d
00010c  f14ee16f          DCW      0xf14e,0xe16f
000110  108000a1          DCW      0x1080,0x00a1
000114  30c220e3          DCW      0x30c2,0x20e3
000118  50044025          DCW      0x5004,0x4025
00011c  70466067          DCW      0x7046,0x6067
000120  83b99398          DCW      0x83b9,0x9398
000124  a3fbb3da          DCW      0xa3fb,0xb3da
000128  c33dd31c          DCW      0xc33d,0xd31c
00012c  e37ff35e          DCW      0xe37f,0xf35e
000130  02b11290          DCW      0x02b1,0x1290
000134  22f332d2          DCW      0x22f3,0x32d2
000138  42355214          DCW      0x4235,0x5214
00013c  62777256          DCW      0x6277,0x7256
000140  b5eaa5cb          DCW      0xb5ea,0xa5cb
000144  95a88589          DCW      0x95a8,0x8589
000148  f56ee54f          DCW      0xf56e,0xe54f
00014c  d52cc50d          DCW      0xd52c,0xc50d
000150  34e224c3          DCW      0x34e2,0x24c3
000154  14a00481          DCW      0x14a0,0x0481
000158  74666447          DCW      0x7466,0x6447
00015c  54244405          DCW      0x5424,0x4405
000160  a7dbb7fa          DCW      0xa7db,0xb7fa
000164  879997b8          DCW      0x8799,0x97b8
000168  e75ff77e          DCW      0xe75f,0xf77e
00016c  c71dd73c          DCW      0xc71d,0xd73c
000170  26d336f2          DCW      0x26d3,0x36f2
000174  069116b0          DCW      0x0691,0x16b0
000178  66577676          DCW      0x6657,0x7676
00017c  46155634          DCW      0x4615,0x5634
000180  d94cc96d          DCW      0xd94c,0xc96d
000184  f90ee92f          DCW      0xf90e,0xe92f
000188  99c889e9          DCW      0x99c8,0x89e9
00018c  b98aa9ab          DCW      0xb98a,0xa9ab
000190  58444865          DCW      0x5844,0x4865
000194  78066827          DCW      0x7806,0x6827
000198  18c008e1          DCW      0x18c0,0x08e1
00019c  388228a3          DCW      0x3882,0x28a3
0001a0  cb7ddb5c          DCW      0xcb7d,0xdb5c
0001a4  eb3ffb1e          DCW      0xeb3f,0xfb1e
0001a8  8bf99bd8          DCW      0x8bf9,0x9bd8
0001ac  abbbbb9a          DCW      0xabbb,0xbb9a
0001b0  4a755a54          DCW      0x4a75,0x5a54
0001b4  6a377a16          DCW      0x6a37,0x7a16
0001b8  0af11ad0          DCW      0x0af1,0x1ad0
0001bc  2ab33a92          DCW      0x2ab3,0x3a92
0001c0  fd2eed0f          DCW      0xfd2e,0xed0f
0001c4  dd6ccd4d          DCW      0xdd6c,0xcd4d
0001c8  bdaaad8b          DCW      0xbdaa,0xad8b
0001cc  9de88dc9          DCW      0x9de8,0x8dc9
0001d0  7c266c07          DCW      0x7c26,0x6c07
0001d4  5c644c45          DCW      0x5c64,0x4c45
0001d8  3ca22c83          DCW      0x3ca2,0x2c83
0001dc  1ce00cc1          DCW      0x1ce0,0x0cc1
0001e0  ef1fff3e          DCW      0xef1f,0xff3e
0001e4  cf5ddf7c          DCW      0xcf5d,0xdf7c
0001e8  af9bbfba          DCW      0xaf9b,0xbfba
0001ec  8fd99ff8          DCW      0x8fd9,0x9ff8
0001f0  6e177e36          DCW      0x6e17,0x7e36
0001f4  4e555e74          DCW      0x4e55,0x5e74
0001f8  2e933eb2          DCW      0x2e93,0x3eb2
0001fc  0ed11ef0          DCW      0x0ed1,0x1ef0

                          AREA ||.data||, DATA, ALIGN=3

                  BufferSize
000000  001e              DCW      0x001e
                  EnableMaster
000002  0100              DCB      0x01,0x00
                  Run_Tim3_Flag
000004  0000              DCB      0x00,0x00
                  Run_LED_Flag
000006  0000              DCW      0x0000
                  Bad_Cnt_Tim3_Flag
000008  0000              DCW      0x0000
00000a  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  timer3SysRunTime
000010  00000000          DCQ      0x0000000000000000
000014  00000000
                  timer3Delay1000ms
                          DCD      0x00000000
                  ADC_SHOW_Flag
00001c  0000              DCW      0x0000
